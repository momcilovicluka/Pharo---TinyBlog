THERE_BE_DRAGONS_HERE
FileDoesNotExistException: 'C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\iceberg\TinyBlog\.git\HEAD'
2 May 2022 3:52:13.282151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	false
		fileHandle: 	ni
	Receiver's instance variables: 
		name: 	'C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\iceberg\Tiny...etc...


File>>openForRead
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\iceberg\Tiny...etc...


File>>readStream
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\iceberg\Tiny...etc...


FileHandle>>binaryReadStream
	Receiver: a FileHandle
	Arguments and temporary variables: 

	Receiver's instance variables: 
		reference: 	File @ C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\i...etc...
		writable: 	false
		id: 	nil


FileSystem>>binaryReadStreamOn:
	Receiver: a FileSystem
	Arguments and temporary variables: 
		aResolvable: 	Path / 'C:' / 'Users' / 'Home' / 'Documents' / 'Pharo' / 'images' ...etc..
	Receiver's instance variables: 
		store: 	a WindowsStore


FileReference>>binaryReadStream
	Receiver: File @ C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\iceberg\TinyBlog\.git\H...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filesystem: 	a FileSystem
		path: 	Path / 'C:' / 'Users' / 'Home' / 'Documents' / 'Pharo' / 'images' / 'Phar...etc...


FileReference(AbstractFileReference)>>readStreamEncoded:
	Receiver: File @ C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\iceberg\TinyBlog\.git\H...etc...
	Arguments and temporary variables: 
		anEncoding: 	'utf8
	Receiver's instance variables: 
		filesystem: 	a FileSystem
		path: 	Path / 'C:' / 'Users' / 'Home' / 'Documents' / 'Pharo' / 'images' / 'Phar...etc...


FileReference>>readStream
	Receiver: File @ C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo-local\iceberg\TinyBlog\.git\H...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filesystem: 	a FileSystem
		path: 	Path / 'C:' / 'Users' / 'Home' / 'Documents' / 'Pharo' / 'images' / 'Phar...etc...


FileLocator>>readStream
	Receiver: {localDirectory}\iceberg\TinyBlog\.git\HEAD
	Arguments and temporary variables: 

	Receiver's instance variables: 
		origin: 	#localDirectory
		path: 	Path * 'iceberg' / 'TinyBlog' / '.git' / 'HEAD'


FileLocator(AbstractFileReference)>>readStreamDo:
	Receiver: {localDirectory}\iceberg\TinyBlog\.git\HEAD
	Arguments and temporary variables: 
		aBlock: 	[ :stream | ^ stream contents ]
		stream: 	ni
	Receiver's instance variables: 
		origin: 	#localDirectory
		path: 	Path * 'iceberg' / 'TinyBlog' / '.git' / 'HEAD'


FileLocator(AbstractFileReference)>>contents
	Receiver: {localDirectory}\iceberg\TinyBlog\.git\HEAD
	Arguments and temporary variables: 

	Receiver's instance variables: 
		origin: 	#localDirectory
		path: 	Path * 'iceberg' / 'TinyBlog' / '.git' / 'HEAD'


IceGitUnbornBranch>>gitRef
	Receiver: an IceGitUnbornBranch
	Arguments and temporary variables: 

	Receiver's instance variables: 
		repository: 	IceLibgitRepository(TinyBlog)


IceGitUnbornBranch>>name
	Receiver: an IceGitUnbornBranch
	Arguments and temporary variables: 

	Receiver's instance variables: 
		repository: 	IceLibgitRepository(TinyBlog)


IceGitUnbornBranch(IceUnbornBranch)>>description
	Receiver: an IceGitUnbornBranch
	Arguments and temporary variables: 

	Receiver's instance variables: 
		repository: 	IceLibgitRepository(TinyBlog)


IceTipRepositoryModel>>branchName
	Receiver: an IceTipRepositoryModel
	Arguments and temporary variables: 

	Receiver's instance variables: 
		entity: 	IceLibgitRepository(TinyBlog)
		repositoryModel: 	nil


IceTipCachedModel>>forwardMessage:
	Receiver: an IceTipCachedModel(an IceTipRepositoryModel)
	Arguments and temporary variables: 
		aMessage: 	branchNam
	Receiver's instance variables: 
		realObject: 	an IceTipRepositoryModel
		cache: 	an IceTipCache


IceTipCachedModel>>doesNotUnderstand: #branchName
	Receiver: an IceTipCachedModel(an IceTipRepositoryModel)
	Arguments and temporary variables: 
		aMessage: 	branchName
		method: 	IceTipRepositoryModel>>#branchNam
	Receiver's instance variables: 
		realObject: 	an IceTipRepositoryModel
		cache: 	an IceTipCache


IceTipWorkingCopyModel>>branchName
	Receiver: an IceTipWorkingCopyModel
	Arguments and temporary variables: 

	Receiver's instance variables: 
		sortingStrategy: 	an IceSortingStrategy
		repositoryModel: 	an IceTipCachedModel(an IceTipRepositoryModel)


IceTipBranchWithCommitStatusBarItem>>newStatusBarItemOn:
	Receiver: an IceTipBranchWithCommitStatusBarItem
	Arguments and temporary variables: 
		aStatusBar: 	an IceTipStatusBa
	Receiver's instance variables: 
		contents: 	nil
		help: 	nil
		position: 	nil
		model: 	an IceTipWorkingCopyModel


[ :each | each position addItem: (each newStatusBarItemOn: self) into: self ] in IceTipStatusBar>>refresh
	Receiver: an IceTipStatusBar
	Arguments and temporary variables: 
		each: 	an IceTipBranchWithCommitStatusBarIte
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	nil
		owner: 	an IceTipWorkingCopyBrowser
		window: 	a NewValueHolder[ nil ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Untitled window' ]
		panel: 	a MorphicGenericAdapter
		leftPanel: 	a PanelMorph(835933184)
		rightPanel: 	a PanelMorph(691267072)
		items: 	an OrderedCollection(an IceTipBranchWithCommitStatusBarItem an IceTipSta...etc...
		color: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(an IceTipBranchWithCommitStatusBarItem an IceTipStatusBarTargetItem)
	Arguments and temporary variables: 
		aBlock: 	[ :each | each position addItem: (each newStatusBarItemOn: self) into: ...etc...
		index: 	
	Receiver's instance variables: 
		array: 	an Array(an IceTipBranchWithCommitStatusBarItem an IceTipStatusBarTarget...etc...
		firstIndex: 	1
		lastIndex: 	2


IceTipStatusBar>>refresh
	Receiver: an IceTipStatusBar
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	nil
		owner: 	an IceTipWorkingCopyBrowser
		window: 	a NewValueHolder[ nil ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Untitled window' ]
		panel: 	a MorphicGenericAdapter
		leftPanel: 	a PanelMorph(835933184)
		rightPanel: 	a PanelMorph(691267072)
		items: 	an OrderedCollection(an IceTipBranchWithCommitStatusBarItem an IceTipSta...etc...
		color: 	nil


IceTipWorkingCopyBrowser>>refresh
	Receiver: an IceTipWorkingCopyBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(a MorphicGenericAdapter)
		owner: 	nil
		window: 	a NewValueHolder[ a WindowPresenter ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Untitled window' ]
		model: 	an IceTipWorkingCopyModel
		toolbar: 	an IceTipToolbar
		packageList: 	a MorphicGenericAdapter
		statusBar: 	an IceTipStatusBar


IceTipWorkingCopyBrowser>>refreshWhenRepository:
	Receiver: an IceTipWorkingCopyBrowser
	Arguments and temporary variables: 
		ann: 	an IceRepositoryModifie
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(a MorphicGenericAdapter)
		owner: 	nil
		window: 	a NewValueHolder[ a WindowPresenter ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Untitled window' ]
		model: 	an IceTipWorkingCopyModel
		toolbar: 	an IceTipToolbar
		packageList: 	a MorphicGenericAdapter
		statusBar: 	an IceTipStatusBar


WeakMessageSend>>value:
	Receiver: a WeakMessageSend(#refreshWhenRepository: -> an IceTipWorkingCopyBrowser)
	Arguments and temporary variables: 
		anObject: 	an IceRepositoryModified
		strongReceiver: 	an IceTipWorkingCopyBrowse
	Receiver's instance variables: 
		selector: 	#refreshWhenRepository:
		shouldBeNil: 	#()
		arguments: 	a WeakArray()


WeakMessageSend>>cull:
	Receiver: a WeakMessageSend(#refreshWhenRepository: -> an IceTipWorkingCopyBrowser)
	Arguments and temporary variables: 
		arg: 	an IceRepositoryModifie
	Receiver's instance variables: 
		selector: 	#refreshWhenRepository:
		shouldBeNil: 	#()
		arguments: 	a WeakArray()


WeakMessageSend>>cull:cull:
	Receiver: a WeakMessageSend(#refreshWhenRepository: -> an IceTipWorkingCopyBrowser)
	Arguments and temporary variables: 
		arg1: 	an IceRepositoryModified
		arg2: 	an IceAnnounce
	Receiver's instance variables: 
		selector: 	#refreshWhenRepository:
		shouldBeNil: 	#()
		arguments: 	a WeakArray()


[ action cull: anAnnouncement cull: announcer ] in WeakAnnouncementSubscription>>deliver:
	Receiver: a WeakAnnouncementSubscription(a WeakMessageSend(#refreshWhenRepository: -> an IceTipWorki...etc...
	Arguments and temporary variables: 
		anAnnouncement: 	an IceRepositoryModifie
	Receiver's instance variables: 
		list: 	a WeakFinalizationList
		next: 	nil
		announcer: 	an IceAnnouncer
		announcementClass: 	IceRepositoryAnnouncement
		action: 	a WeakMessageSend(#refreshWhenRepository: -> an IceTipWorkingCopyBrowse...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc..
	Receiver's instance variables: 
		outerContext: 	WeakAnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass 
	Receiver's instance variables: 
		outerContext: 	WeakAnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


WeakAnnouncementSubscription>>deliver:
	Receiver: a WeakAnnouncementSubscription(a WeakMessageSend(#refreshWhenRepository: -> an IceTipWorki...etc...
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
LGit_GIT_ENOTFOUND: Object not found - no match for id (81083cc713c962cbec171821d96512708e579be8)
2 May 2022 3:57:12.952151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

LGitReturnCodeEnum>>handleLGitReturnCode
	Receiver: a LGitReturnCodeEnum(#git_enotfound [-3])
	Arguments and temporary variables: 
		handler: 	LGit_GIT_ENOTFOUN
	Receiver's instance variables: 
		value: 	-3


LGitTreeEntry(LGitExternalObject)>>withReturnHandlerDo:
	Receiver: a LGitTreeEntry ('.project')
	Arguments and temporary variables: 
		callBlock: 	[ self tree_entry_to_object: object repo: self repository entry: sel...etc..
	Receiver's instance variables: 
		handle: 	@ 16r04303FE0
		repository: 	a LGitRepository (C:\Users\Home\Documents\Pharo\images\Pharo Mooc\p...etc...
		parent: 	nil


LGitTreeEntry>>object
	Receiver: a LGitTreeEntry ('.project')
	Arguments and temporary variables: 
		object: 	a LGitBlob (<not initialized>
	Receiver's instance variables: 
		handle: 	@ 16r04303FE0
		repository: 	a LGitRepository (C:\Users\Home\Documents\Pharo\images\Pharo Mooc\p...etc...
		parent: 	nil


LGitFileHandle>>readStream
	Receiver: a LGitFileHandle
	Arguments and temporary variables: 

	Receiver's instance variables: 
		reference: 	git:///.project
		writable: 	false
		entry: 	a LGitTreeEntry ('.project')


LGitFileHandle>>binaryReadStream
	Receiver: a LGitFileHandle
	Arguments and temporary variables: 

	Receiver's instance variables: 
		reference: 	git:///.project
		writable: 	false
		entry: 	a LGitTreeEntry ('.project')


FileSystem>>binaryReadStreamOn:
	Receiver: a FileSystem
	Arguments and temporary variables: 
		aResolvable: 	Path / '.project
	Receiver's instance variables: 
		store: 	a LGitCommitStore


FileReference>>binaryReadStream
	Receiver: git:///.project
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filesystem: 	a FileSystem
		path: 	Path / '.project'


FileReference(AbstractFileReference)>>binaryReadStreamDo:
	Receiver: git:///.project
	Arguments and temporary variables: 
		aBlock: 	[ :stream | STON fromStream: (ZnCharacterReadStream on: stream encoding...etc...
		stream: 	ni
	Receiver's instance variables: 
		filesystem: 	a FileSystem
		path: 	Path / '.project'


IceBasicProjectReader>>readProjectFromCommitish:
	Receiver: an IceBasicProjectReader
	Arguments and temporary variables: 
		anIceCommitish: 	IceGitCommit(1bb2bedf017e63399f5834ab034caf6b5a5a3fe4)
		properties: 	nil
		projectFileReference: 	git:///.projec
	Receiver's instance variables: 
an IceBasicProjectReader

IceProjectReader class>>readProjectFrom:
	Receiver: IceProjectReader
	Arguments and temporary variables: 
		anIceCommitish: 	IceGitCommit(1bb2bedf017e63399f5834ab034caf6b5a5a3fe4)
		readers: 	an OrderedCollection(an IceBasicProjectReader an IceUnbornProjectReade...etc..
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#canReadProjectFromCommitish:->IceProjectReader>...etc...
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{IceBasicProjectReader. IceInvalidProjectReader. IceUnbornProjectRe...etc...
		name: 	#IceProjectReader
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-Project'


[ IceProjectReader readProjectFrom: self ] in IceGitCommit>>project
	Receiver: IceGitCommit(1bb2bedf017e63399f5834ab034caf6b5a5a3fe4)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		repository: 	IceLibgitRepository(TinyBlog)
		id: 	'1bb2bedf017e63399f5834ab034caf6b5a5a3fe4'
		author: 	'Luka'
		datetime: 	2022-05-02T15:48:48+02:00
		ancestorIds: 	#()
		comment: 	'Initial class commit from Iceberg'


BlockClosure>>on:do:
	Receiver: [ IceProjectReader readProjectFrom: self ]
	Arguments and temporary variables: 
		exception: 	NotFound
		handlerAction: 	[ self repository fetch.
IceProjectReader readProjectFrom: self ...etc..
	Receiver's instance variables: 
		outerContext: 	IceGitCommit>>project
		startpc: 	97
		numArgs: 	0


IceGitCommit>>project
	Receiver: IceGitCommit(1bb2bedf017e63399f5834ab034caf6b5a5a3fe4)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		repository: 	IceLibgitRepository(TinyBlog)
		id: 	'1bb2bedf017e63399f5834ab034caf6b5a5a3fe4'
		author: 	'Luka'
		datetime: 	2022-05-02T15:48:48+02:00
		ancestorIds: 	#()
		comment: 	'Initial class commit from Iceberg'


IceBasicProject(IceAbstractProject)>>isDirty
	Receiver: an IceBasicProject
	Arguments and temporary variables: 

	Receiver's instance variables: 
		commitish: 	IceGitCommit(1bb2bedf017e63399f5834ab034caf6b5a5a3fe4)
		properties: 	a Dictionary('srcDirectory'->'src' )


IceWorkingCopy>>isModified
	Receiver: an IceWorkingCopy
	Arguments and temporary variables: 

	Receiver's instance variables: 
		repository: 	IceLibgitRepository(TinyBlog)
		packages: 	a Dictionary(#TinyBlog->IcePackage(TinyBlog, loaded) )
		referenceCommit: 	IceGitCommit(1bb2bedf017e63399f5834ab034caf6b5a5a3fe4)
		shouldIgnoreNotifications: 	false
		project: 	an IceBasicProject
		properties: 	an IceRepositoryProperties


IceLibgitRepository(IceRepository)>>isModified
	Receiver: IceLibgitRepository(TinyBlog)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'TinyBlog'
		workingCopy: 	an IceWorkingCopy
		index: 	an IceGitIndex
		commitsInPackageCache: 	a LRUCache(#1 1/30 [ 1 ] 75%)
		location: 	{localDirectory}\iceberg\TinyBlog
		commitCache: 	a LRUCache(#1 1/30 [ 1 ] 89%)
		handle: 	a LGitRepository (C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo...etc...


IceLibgitRepository>>isModified
	Receiver: IceLibgitRepository(TinyBlog)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'TinyBlog'
		workingCopy: 	an IceWorkingCopy
		index: 	an IceGitIndex
		commitsInPackageCache: 	a LRUCache(#1 1/30 [ 1 ] 75%)
		location: 	{localDirectory}\iceberg\TinyBlog
		commitCache: 	a LRUCache(#1 1/30 [ 1 ] 89%)
		handle: 	a LGitRepository (C:\Users\Home\Documents\Pharo\images\Pharo Mooc\pharo...etc...


IceTipRepositoryModel>>descriptionWithDecoration
	Receiver: an IceTipRepositoryModel
	Arguments and temporary variables: 
		text: 	a Text for 'TinyBlog
	Receiver's instance variables: 
		entity: 	IceLibgitRepository(TinyBlog)
		repositoryModel: 	nil


IceTipCachedModel>>forwardMessage:
	Receiver: an IceTipCachedModel(an IceTipRepositoryModel)
	Arguments and temporary variables: 
		aMessage: 	descriptionWithDecoratio
	Receiver's instance variables: 
		realObject: 	an IceTipRepositoryModel
		cache: 	an IceTipCache


IceTipCachedModel>>doesNotUnderstand: #descriptionWithDecoration
	Receiver: an IceTipCachedModel(an IceTipRepositoryModel)
	Arguments and temporary variables: 
		aMessage: 	descriptionWithDecoration
		method: 	IceTipRepositoryModel>>#descriptionWithDecoratio
	Receiver's instance variables: 
		realObject: 	an IceTipRepositoryModel
		cache: 	an IceTipCache


ByteSymbol(Symbol)>>value:
	Receiver: #descriptionWithDecoration
	Arguments and temporary variables: 
		anObject: 	an IceTipCachedModel(an IceTipRepositoryModel
	Receiver's instance variables: 
#descriptionWithDecoration

IceTipTableColumn>>read:
	Receiver: an IceTipTableColumn
	Arguments and temporary variables: 
		anObject: 	an IceTipCachedModel(an IceTipRepositoryModel
	Receiver's instance variables: 
		id: 	'Name'
		width: 	200
		sortingStrategy: 	a FTNullColumnSortingStrategy
		action: 	#descriptionWithDecoration
		icon: 	nil


IceTipDataSource>>cellColumn:row:
	Receiver: an IceTipDataSource
	Arguments and temporary variables: 
		column: 	an IceTipTableColumn
		rowIndex: 	1
		item: 	an IceTipCachedModel(an IceTipRepositoryModel)
		cell: 	a FTCellMorph(505244672
	Receiver's instance variables: 
		table: 	a FTTableMorph(498740480)
		elements: 	an OrderedCollection(an IceTipCachedModel(an IceTipRepositoryModel))
		unsortedElements: 	nil
		tool: 	an IceTipRepositoriesBrowser


[ :columnIndex | 
| cell |
cell := self table dataSource
	cellColumn: (columns at: columnIndex)
	row: rowIndex.
cell width: (columnWidths at: columnIndex).
row addMorphBack: cell ] in FTTableContainerMorph>>updateExposedRows
	Receiver: a FTTableContainerMorph(702838016)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (37@40)
		owner: 	a FTTableMorph(498740480)
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	nil
		needsRefreshExposedRows: 	true
		headerRow: 	nil
		exposedRows: 	a SmallDictionary()
		startColumnIndex: 	0


Interval>>do:
	Receiver: (1 to: 3)
	Arguments and temporary variables: 
		aBlock: 	[ :columnIndex | 
| cell |
cell := self table dataSource
	cellColumn: (...etc...
		aValue: 	1
		index: 	1
		size: 	
	Receiver's instance variables: 
		start: 	1
		stop: 	3
		step: 	1


FTTableContainerMorph>>updateExposedRows
	Receiver: a FTTableContainerMorph(702838016)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (37@40)
		owner: 	a FTTableMorph(498740480)
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	nil
		needsRefreshExposedRows: 	true
		headerRow: 	nil
		exposedRows: 	a SmallDictionary()
		startColumnIndex: 	0


FTTableMorph>>resetPosition
	Receiver: a FTTableMorph(498740480)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a FTTableContainerMorph(702838016) a ScrollBar(810343168))
		fullBounds: 	nil
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (98211328) [other:  (announcer -> an Announcer) (km...etc...
		container: 	a FTTableContainerMorph(702838016)
		verticalScrollBar: 	a ScrollBar(810343168)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		selectedIndexes: 	#()
		highlightedIndexes: 	#()
		showIndex: 	1
		dataSource: 	an IceTipDataSource
		intercellSpacing: 	nil
		rowHeight: 	20.333333333333336
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(an IceTipTableColumn an IceTipTableColumn an IceTipTableColum...etc...
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	true
		allowsDeselection: 	nil
		needToggleAtMouseUp: 	false
		function: 	a FTSearchFunction
		resizable: 	true
		selectionModeStrategy: 	a FTRowSelectionModeStrategy


FTTableMorph>>dataSource:
	Receiver: a FTTableMorph(498740480)
	Arguments and temporary variables: 
		anObject: 	an IceTipDataSourc
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a FTTableContainerMorph(702838016) a ScrollBar(810343168))
		fullBounds: 	nil
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (98211328) [other:  (announcer -> an Announcer) (km...etc...
		container: 	a FTTableContainerMorph(702838016)
		verticalScrollBar: 	a ScrollBar(810343168)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		selectedIndexes: 	#()
		highlightedIndexes: 	#()
		showIndex: 	1
		dataSource: 	an IceTipDataSource
		intercellSpacing: 	nil
		rowHeight: 	20.333333333333336
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(an IceTipTableColumn an IceTipTableColumn an IceTipTableColum...etc...
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	true
		allowsDeselection: 	nil
		needToggleAtMouseUp: 	false
		function: 	a FTSearchFunction
		resizable: 	true
		selectionModeStrategy: 	a FTRowSelectionModeStrategy


IceTipRepositoriesBrowser>>initializeRepositoryList
	Receiver: an IceTipRepositoriesBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		focusOrder: 	nil
		owner: 	nil
		window: 	a NewValueHolder[ nil ]
		spec: 	nil
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Untitled window' ]
		model: 	an IceTipRepositoriesModel
		toolbar: 	an IceTipToolbar
		repositoryList: 	a MorphicGenericAdapter


IceTipRepositoriesBrowser>>initializeWidgets
	Receiver: an IceTipRepositoriesBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		focusOrder: 	nil
		owner: 	nil
		window: 	a NewValueHolder[ nil ]
		spec: 	nil
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Untitled window' ]
		model: 	an IceTipRepositoriesModel
		toolbar: 	an IceTipToolbar
		repositoryList: 	a MorphicGenericAdapter


IceTipRepositoriesBrowser(ComposablePresenter)>>initializePrivateHooks
	Receiver: an IceTipRepositoriesBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		focusOrder: 	nil
		owner: 	nil
		window: 	a NewValueHolder[ nil ]
		spec: 	nil
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Untitled window' ]
		model: 	an IceTipRepositoriesModel
		toolbar: 	an IceTipToolbar
		repositoryList: 	a MorphicGenericAdapter


IceTipRepositoriesBrowser(ComposablePresenter)>>initialize
	Receiver: an IceTipRepositoriesBrowser
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#isTemp was sent to nil
2 May 2022 4:09:33.128151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	MessageNotUnderstood: receiver of "isTemp" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

OCASTSemanticAnalyzer>>visitVariableNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aVariableNode: 	RBVariableNode(testSize)
		var: 	ni
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBVariableNode>>acceptVisitor:
	Receiver: RBVariableNode(testSize)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testSize self)
		properties: 	nil
		parentheses: 	nil
		name: 	#testSize
		start: 	1


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBVariableNode(testSize
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testSize self
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testSize self)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testSize self assert: blog size equals: 1)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBVariableNode(testSize)
		selector: 	#self
		keywordsPositions: 	an IntegerArray(11)
		arguments: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testSize self
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBReturnNode(^ testSize self assert: blog size equals: 1)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBMessageNode(testSize self)
		selector: 	#assert:equals:
		keywordsPositions: 	an IntegerArray(16 34)
		arguments: 	an OrderedCollection(RBMessageNode(blog size) RBLiteralValueNode(1))...etc...


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitReturnNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aReturnNode: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBReturnNode>>acceptVisitor:
	Receiver: RBReturnNode(^ testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		properties: 	nil
		return: 	0
		value: 	RBMessageNode(testSize self assert: blog size equals: 1)


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


[ :each | self visitNode: each ] in OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		each: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


Array(SequenceableCollection)>>do:
	Receiver: an Array(RBReturnNode(^ testSize self assert: blog size equals: 1))
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visitNode: each ]
		index: 	
	Receiver's instance variables: 
an Array(RBReturnNode(^ testSize self assert: blog size equals: 1))

OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBSequenceNode>>acceptVisitor:
	Receiver: RBSequenceNode(^ testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	DoIt
	^ testSize self assert: blog size equals: 1
		properties: 	nil
		leftBar: 	nil
		rightBar: 	nil
		statements: 	an Array(RBReturnNode(^ testSize self assert: blog size equals: 1))...etc...
		periods: 	#()
		temporaries: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBSequenceNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>visitMethodNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMethodNode: 	DoIt
	^ testSize self assert: blog size equals: 
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>acceptVisitor:
	Receiver: DoIt
	^ testSize self assert: blog size equals: 1
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	^ testSize self assert: blog size equals: 
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>analyze:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	^ testSize self assert: blog size equals: 
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>doSemanticAnalysis
	Receiver: DoIt
	^ testSize self assert: blog size equals: 1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


[ ast doSemanticAnalysis ] in OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ ast doSemanticAnalysis ]
	Arguments and temporary variables: 
		exception: 	OCSemanticError
		handlerAction: 	[ :ex | 
ex defaultAction.
^ self compilationContext failBlock v...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>doSemanticAnalysis
		startpc: 	77
		numArgs: 	0


OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


[ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ] in [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	Arguments and temporary variables: 
		exception: 	ReparseAfterSourceEditing
		handlerAction: 	[ :notification | 
self source: notification newSource.
notifica...etc..
	Receiver's instance variables: 
		outerContext: 	[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self...etc...
		startpc: 	245
		numArgs: 	0


[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: Repar...etc...
	Arguments and temporary variables: 
		exception: 	SyntaxErrorNotification
		handlerAction: 	[ :exception | 
self compilationContext requestor
	ifNotNil: [ s...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>compile
		startpc: 	241
		numArgs: 	0


OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'testSize
	self assert: blog size equals: 1
'
		aController: 	a RubScrolledTextMorph(737210624)
		aClass: 	TBBlogTest
		oldClass: 	TBBlogTest
		class: 	nil
		newClassName: 	'testSize'
		defTokens: 	an OrderedCollection('testSize' 'self' 'assert:' 'blog' 'size' 'equa...etc...
		keywdIx: 	0
		classCompiler: 	an OpalCompile
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(798388224)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#isTemp was sent to nil
2 May 2022 4:09:57.172151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	MessageNotUnderstood: receiver of "isTemp" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

OCASTSemanticAnalyzer>>visitVariableNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aVariableNode: 	RBVariableNode(testSize)
		var: 	ni
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBVariableNode>>acceptVisitor:
	Receiver: RBVariableNode(testSize)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testSize self)
		properties: 	nil
		parentheses: 	nil
		name: 	#testSize
		start: 	1


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBVariableNode(testSize
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testSize self
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testSize self)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testSize self assert: blog size equals: 1)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBVariableNode(testSize)
		selector: 	#self
		keywordsPositions: 	an IntegerArray(11)
		arguments: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testSize self
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBReturnNode(^ testSize self assert: blog size equals: 1)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBMessageNode(testSize self)
		selector: 	#assert:equals:
		keywordsPositions: 	an IntegerArray(16 34)
		arguments: 	an OrderedCollection(RBMessageNode(blog size) RBLiteralValueNode(1))...etc...


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitReturnNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aReturnNode: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBReturnNode>>acceptVisitor:
	Receiver: RBReturnNode(^ testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		properties: 	nil
		return: 	0
		value: 	RBMessageNode(testSize self assert: blog size equals: 1)


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


[ :each | self visitNode: each ] in OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		each: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


Array(SequenceableCollection)>>do:
	Receiver: an Array(RBReturnNode(^ testSize self assert: blog size equals: 1))
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visitNode: each ]
		index: 	
	Receiver's instance variables: 
an Array(RBReturnNode(^ testSize self assert: blog size equals: 1))

OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBSequenceNode>>acceptVisitor:
	Receiver: RBSequenceNode(^ testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	DoIt
	^ testSize self assert: blog size equals: 1
		properties: 	nil
		leftBar: 	nil
		rightBar: 	nil
		statements: 	an Array(RBReturnNode(^ testSize self assert: blog size equals: 1))...etc...
		periods: 	#()
		temporaries: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBSequenceNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>visitMethodNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMethodNode: 	DoIt
	^ testSize self assert: blog size equals: 
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>acceptVisitor:
	Receiver: DoIt
	^ testSize self assert: blog size equals: 1
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	^ testSize self assert: blog size equals: 
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>analyze:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	^ testSize self assert: blog size equals: 
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>doSemanticAnalysis
	Receiver: DoIt
	^ testSize self assert: blog size equals: 1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


[ ast doSemanticAnalysis ] in OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ ast doSemanticAnalysis ]
	Arguments and temporary variables: 
		exception: 	OCSemanticError
		handlerAction: 	[ :ex | 
ex defaultAction.
^ self compilationContext failBlock v...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>doSemanticAnalysis
		startpc: 	77
		numArgs: 	0


OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


[ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ] in [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	Arguments and temporary variables: 
		exception: 	ReparseAfterSourceEditing
		handlerAction: 	[ :notification | 
self source: notification newSource.
notifica...etc..
	Receiver's instance variables: 
		outerContext: 	[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self...etc...
		startpc: 	245
		numArgs: 	0


[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: Repar...etc...
	Arguments and temporary variables: 
		exception: 	SyntaxErrorNotification
		handlerAction: 	[ :exception | 
self compilationContext requestor
	ifNotNil: [ s...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>compile
		startpc: 	241
		numArgs: 	0


OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ testSize self assert: blog size equals: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'testSize
	self assert: blog size equals: 1
'
		aController: 	a RubScrolledTextMorph(737210624)
		aClass: 	TBBlogTest
		oldClass: 	TBBlogTest
		class: 	nil
		newClassName: 	'testSize'
		defTokens: 	an OrderedCollection('testSize' 'self' 'assert:' 'blog' 'size' 'equa...etc...
		keywdIx: 	0
		classCompiler: 	an OpalCompile
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(798388224)
	Arguments and temporary variables: 
		aString: 	'testSize
	self assert: blog size equals: 1
'
		aController: 	a RubScrolledTextMorph(737210624)
		aClass: 	TBBlogTes
	Receiver's instance variables: 
		bounds: 	(68.0@46.0) corner: (918.0@666.0)
		owner: 	a SystemWindow(172461056) named: TBBlogTest
		submorphs: 	an Array(a ProportionalSplitterMorph(621063936) a PanelMorph(8344340...etc...
		fullBounds: 	(68@46) corner: (918@666)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (298812672) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		navigationPanel: 	a PanelMorph(834434048)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(439078144) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(707551488)
		toolbar: 	a ClyToolbarMorph(1031299328)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyInheritanceAnalysis...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(439078144)
		classView: 	a ClyQueryViewMorph(408623360)
		methodGroupView: 	a ClyQueryViewMorph(101218816)
		methodView: 	a ClyQueryViewMorph(325452032)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: TBBlogTest


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(567284736)
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		bounds: 	(70.0@382.0) corner: (917.0@665.0)
		owner: 	a Morph(702577152)
		submorphs: 	an Array(a ProportionalSplitterMorph(506271744) a ClyQueryViewMorph(...etc...
		fullBounds: 	(70@382) corner: (917@665)
		color: 	Color transparent
		extension: 	a MorphExtension (228417792) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(798388224)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(570639104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(392691712)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(737210624)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	TBBlogTest


THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 0
2 May 2022 4:10:45.045151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

ByteString(Object)>>errorSubscriptBounds:
	Receiver: 'testSize
	self assert: blog size equals: 1'
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
'testSize
	self assert: blog size equals: 1'

ByteString(Object)>>at:
	Receiver: 'testSize
	self assert: blog size equals: 1'
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
'testSize
	self assert: blog size equals: 1'

ByteString>>at:
	Receiver: 'testSize
	self assert: blog size equals: 1'
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
'testSize
	self assert: blog size equals: 1'

Text>>at:
	Receiver: a Text for 'testSize
	self assert: blog size equals: 1'
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
		string: 	'testSize
	self assert: blog size equals: 1'
		runs: 	a RunArray runs: #(8 2 4 1 7 1 4 1 4 1 7 1 1) values: an Array(an Array(a...etc...


OCUndeclaredVariableWarning>>declareTempAndPaste:
	Receiver: OCUndeclaredVariableWarning: Undeclared temp: testSize
	Arguments and temporary variables: 
		name: 	#testSize
		insertion: 	nil
		delta: 	nil
		theTextString: 	a Text for 'testSize
	self assert: blog size equals: 1'
		characterBeforeMark: 	Character space
		tempsMark: 	0
		newMethodNode: 	testSize
	self assert: blog size equals: 
	Receiver's instance variables: 
		messageText: 	'Undeclared temp: testSize'
		tag: 	nil
		signaler: 	an OCASTSemanticAnalyzer
		signalContext: 	OCUndeclaredVariableWarning(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil
		compilationContext: 	a CompilationContext
		node: 	RBVariableNode(testSize)


[ self declareTempAndPaste: name ] in OCUndeclaredVariableWarning>>openMenuIn:
	Receiver: OCUndeclaredVariableWarning: Undeclared temp: testSize
	Arguments and temporary variables: 
		aBlock: 	[ :labels :lines :caption | UIManager default chooseFrom: labels lines:...etc...
		alternatives: 	an OrderedCollection()
		labels: 	an OrderedCollection('Declare new temporary variable' 'Declare new inst...etc...
		actions: 	an OrderedCollection([ self declareTempAndPaste: name ] [ self declare...etc...
		lines: 	an OrderedCollection(2 2)
		caption: 	'Unknown variable: testSize please correct, or cancel:'
		choice: 	1
		name: 	#testSize
		interval: 	(1 to: 8
	Receiver's instance variables: 
		messageText: 	'Undeclared temp: testSize'
		tag: 	nil
		signaler: 	an OCASTSemanticAnalyzer
		signalContext: 	OCUndeclaredVariableWarning(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil
		compilationContext: 	a CompilationContext
		node: 	RBVariableNode(testSize)


OCUndeclaredVariableWarning>>openMenuIn:
	Receiver: OCUndeclaredVariableWarning: Undeclared temp: testSize
	Arguments and temporary variables: 
		aBlock: 	[ :labels :lines :caption | UIManager default chooseFrom: labels lines:...etc...
		alternatives: 	an OrderedCollection()
		labels: 	an OrderedCollection('Declare new temporary variable' 'Declare new inst...etc...
		actions: 	an OrderedCollection([ self declareTempAndPaste: name ] [ self declare...etc...
		lines: 	an OrderedCollection(2 2)
		caption: 	'Unknown variable: testSize please correct, or cancel:'
		choice: 	1
		name: 	#testSize
		interval: 	(1 to: 8
	Receiver's instance variables: 
		messageText: 	'Undeclared temp: testSize'
		tag: 	nil
		signaler: 	an OCASTSemanticAnalyzer
		signalContext: 	OCUndeclaredVariableWarning(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil
		compilationContext: 	a CompilationContext
		node: 	RBVariableNode(testSize)


OCUndeclaredVariableWarning(OCSemanticWarning)>>defaultAction
	Receiver: OCUndeclaredVariableWarning: Undeclared temp: testSize
	Arguments and temporary variables: 

	Receiver's instance variables: 
		messageText: 	'Undeclared temp: testSize'
		tag: 	nil
		signaler: 	an OCASTSemanticAnalyzer
		signalContext: 	OCUndeclaredVariableWarning(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil
		compilationContext: 	a CompilationContext
		node: 	RBVariableNode(testSize)


OCUndeclaredVariableWarning>>defaultAction
	Receiver: OCUndeclaredVariableWarning: Undeclared temp: testSize
	Arguments and temporary variables: 
		varName: 	#testSize
		className: 	#UndefinedObject
		selector: 	#DoI
	Receiver's instance variables: 
		messageText: 	'Undeclared temp: testSize'
		tag: 	nil
		signaler: 	an OCASTSemanticAnalyzer
		signalContext: 	OCUndeclaredVariableWarning(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil
		compilationContext: 	a CompilationContext
		node: 	RBVariableNode(testSize)


UndefinedObject>>handleSignal:
	Receiver: nil
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
nil

Context>>handleSignal:
	Receiver: BlockClosure>>on:do:
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
		sender: 	WorldMorph>>becomeActiveDuring:
		pc: 	30
		stackp: 	2
		method: 	BlockClosure>>#on:do:
		closureOrNil: 	nil
		receiver: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	...etc...


Context>>handleSignal:
	Receiver: BlockClosure>>on:do:
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
		sender: 	BlockClosure>>on:fork:
		pc: 	30
		stackp: 	2
		method: 	BlockClosure>>#on:do:
		closureOrNil: 	nil
		receiver: 	[ action cull: anAnnouncement cull: announcer ]


Context>>handleSignal:
	Receiver: BlockClosure>>on:do:
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
		sender: 	BlockClosure>>on:fork:
		pc: 	30
		stackp: 	2
		method: 	BlockClosure>>#on:do:
		closureOrNil: 	nil
		receiver: 	[ action cull: anAnnouncement cull: announcer ]


Context>>handleSignal:
	Receiver: BlockClosure>>on:do:
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
		sender: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
appl...etc...
		pc: 	30
		stackp: 	2
		method: 	BlockClosure>>#on:do:
		closureOrNil: 	nil
		receiver: 	[ self changesAreAboutApply.
applied := self applyChanges ]


Context>>handleSignal:
	Receiver: BlockClosure>>on:do:
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
		sender: 	OpalCompiler>>compile
		pc: 	30
		stackp: 	2
		method: 	BlockClosure>>#on:do:
		closureOrNil: 	nil
		receiver: 	[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self cal...etc...


Context>>handleSignal:
	Receiver: BlockClosure>>on:do:
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
		sender: 	[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callP...etc...
		pc: 	30
		stackp: 	2
		method: 	BlockClosure>>#on:do:
		closureOrNil: 	nil
		receiver: 	[ self parse.
self transformDoit.
self doSemanticAnalysis.
self callP...etc...


Context>>handleSignal:
	Receiver: BlockClosure>>on:do:
	Arguments and temporary variables: 
		exception: 	OCUndeclaredVariableWarning: Undeclared temp: testSiz
	Receiver's instance variables: 
		sender: 	OpalCompiler>>doSemanticAnalysis
		pc: 	30
		stackp: 	2
		method: 	BlockClosure>>#on:do:
		closureOrNil: 	nil
		receiver: 	[ ast doSemanticAnalysis ]


OCUndeclaredVariableWarning(Exception)>>signal
	Receiver: OCUndeclaredVariableWarning: Undeclared temp: testSize
	Arguments and temporary variables: 

	Receiver's instance variables: 
		messageText: 	'Undeclared temp: testSize'
		tag: 	nil
		signaler: 	an OCASTSemanticAnalyzer
		signalContext: 	OCUndeclaredVariableWarning(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil
		compilationContext: 	a CompilationContext
		node: 	RBVariableNode(testSize)


OCASTSemanticAnalyzer>>undeclaredVariable:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		variableNode: 	RBVariableNode(testSize
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>visitVariableNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aVariableNode: 	RBVariableNode(testSize)
		var: 	ni
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBVariableNode>>acceptVisitor:
	Receiver: RBVariableNode(testSize)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testSize self)
		properties: 	nil
		parentheses: 	nil
		name: 	#testSize
		start: 	1


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBVariableNode(testSize
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testSize self
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testSize self)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testSize self assert: blog size equals: 1)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBVariableNode(testSize)
		selector: 	#self
		keywordsPositions: 	an IntegerArray(11)
		arguments: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testSize self
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBReturnNode(^ testSize self assert: blog size equals: 1)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBMessageNode(testSize self)
		selector: 	#assert:equals:
		keywordsPositions: 	an IntegerArray(16 34)
		arguments: 	an OrderedCollection(RBMessageNode(blog size) RBLiteralValueNode(1))...etc...


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitReturnNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aReturnNode: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBReturnNode>>acceptVisitor:
	Receiver: RBReturnNode(^ testSize self assert: blog size equals: 1)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		properties: 	nil
		return: 	0
		value: 	RBMessageNode(testSize self assert: blog size equals: 1)


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


[ :each | self visitNode: each ] in OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(^ testSize self assert: blog size equals: 1)
		each: 	RBReturnNode(^ testSize self assert: blog size equals: 1
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


Array(SequenceableCollection)>>do:
	Receiver: an Array(RBReturnNode(^ testSize self assert: blog size equals: 1))
	Arguments and temporarTHERE_BE_DRAGONS_HERE
#isTemp was sent to nil
2 May 2022 4:10:59.700151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	MessageNotUnderstood: receiver of "isTemp" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

OCASTSemanticAnalyzer>>visitVariableNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aVariableNode: 	RBVariableNode(testRemoveAllBlogPosts)
		var: 	ni
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBVariableNode>>acceptVisitor:
	Receiver: RBVariableNode(testRemoveAllBlogPosts)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testRemoveAllBlogPosts blog)
		properties: 	nil
		parentheses: 	nil
		name: 	#testRemoveAllBlogPosts
		start: 	1


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBVariableNode(testRemoveAllBlogPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testRemoveAllBlogPosts blog
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testRemoveAllBlogPosts blog)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBVariableNode(testRemoveAllBlogPosts)
		selector: 	#blog
		keywordsPositions: 	an IntegerArray(25)
		arguments: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testRemoveAllBlogPosts blog
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self asser...etc...
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBMessageNode(testRemoveAllBlogPosts blog)
		selector: 	#removeAllPosts
		keywordsPositions: 	an IntegerArray(30)
		arguments: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


[ :each | self visitNode: each ] in OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ sel...etc...
		each: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OrderedCollection>>do:
	Receiver: an OrderedCollection(RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts) RBReturnNod...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visitNode: each ]
		index: 	
	Receiver's instance variables: 
		array: 	an Array(RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts) RBRet...etc...
		firstIndex: 	1
		lastIndex: 	2


OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ sel...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBSequenceNode>>acceptVisitor:
	Receiver: RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert: blog size equals...etc...
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog ...etc...
		properties: 	nil
		leftBar: 	nil
		rightBar: 	nil
		statements: 	an OrderedCollection(RBMessageNode(testRemoveAllBlogPosts blog remo...etc...
		periods: 	an OrderedCollection(44)
		temporaries: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>visitMethodNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMethodNode: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: ...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>acceptVisitor:
	Receiver: DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog size equals: 0
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert:...etc...
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog s...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>analyze:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog s...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>doSemanticAnalysis
	Receiver: DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog size equals: 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert:...etc...
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


[ ast doSemanticAnalysis ] in OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ ast doSemanticAnalysis ]
	Arguments and temporary variables: 
		exception: 	OCSemanticError
		handlerAction: 	[ :ex | 
ex defaultAction.
^ self compilationContext failBlock v...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>doSemanticAnalysis
		startpc: 	77
		numArgs: 	0


OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


[ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ] in [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	Arguments and temporary variables: 
		exception: 	ReparseAfterSourceEditing
		handlerAction: 	[ :notification | 
self source: notification newSource.
notifica...etc..
	Receiver's instance variables: 
		outerContext: 	[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self...etc...
		startpc: 	245
		numArgs: 	0


[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: Repar...etc...
	Arguments and temporary variables: 
		exception: 	SyntaxErrorNotification
		handlerAction: 	[ :exception | 
self compilationContext requestor
	ifNotNil: [ s...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>compile
		startpc: 	241
		numArgs: 	0


OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'testRemoveAllBlogPosts
	blog removeAllPosts.
	self assert: blog size ...etc...
		aController: 	a RubScrolledTextMorph(737210624)
		aClass: 	TBBlogTest
		oldClass: 	TBBlogTest
		class: 	nil
		newClassName: 	'testRemoveAllBlogPosts'
		defTokens: 	an OrderedCollection('testRemoveAllBlogPosts' 'blog' 'removeAllPosts...etc...
		keywdIx: 	0
		classCompiler: 	an OpalCompile
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(798388224)
	Arguments and temporary variables: 
		aString: 	'testRemoveAllBlogPosts
	blog removeAllPosts.
	self assert: blog size ...etc...
		aController: 	a RubScrolledTextMorph(737210624)
		aClass: 	TBBlogTes
	Receiver's instance variables: 
		bounds: 	(68.0@46.0) corner: (918.0@666.0)
		owner: 	a SystemWindow(172461056) named: TBBlogTest
		submorphs: 	an Array(a ProportionalSplitterMorph(621063936) a PanelMorph(8344340...etc...
		fullBounds: 	(68@46) corner: (918@666)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (298812672) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		navigationPanel: 	a PanelMorph(834434048)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(439078144) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(707551488)
		toolbar: 	a ClyToolbarMorph(1031299328)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyInheritanceAnalysis...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(439078144)
		classView: 	a ClyQueryViewMorph(408623360)
		methodGroupView: 	a ClyQueryViewMorph(101218816)
		methodView: 	a ClyQueryViewMorph(325452032)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: TBBlogTest


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(567284736)
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		bounds: 	(70.0@382.0) corner: (917.0@665.0)
		owner: 	a Morph(702577152)
		submorphs: 	an Array(a ProportionalSplitterMorph(506271744) a ClyQueryViewMorph(...etc...
		fullBounds: 	(70@382) corner: (917@665)
		color: 	Color transparent
		extension: 	a MorphExtension (228417792) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(798388224)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(570639104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(392691712)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(737210624)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	TBBlogTest


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(567284736)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(70.0@382.0) corner: (917.0@665.0)
		owner: 	a Morph(702577152)
		submorphs: 	an Array(a ProportionalSplitterMorph(506271744) a ClyQueryViewMorph(...etc...
		fullBounds: 	(70@382) corner: (917@665)
		color: 	Color transparent
		extension: 	a MorphExtension (228417792) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(798388224)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(570639104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(392691712)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(737210624)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	TBBlogTest


BlockClosure>>on:do:
	Receiver: [ self changesAreAboutApply.
applied := self applyChanges ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :err | 
textModel text: self editingText.
textMorph hasUnaccep...etc..
	Receiver's instance variables: 
		outerContext: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply...etc...
		startpc: 	140
		numArgTHERE_BE_DRAGONS_HERE
#isTemp was sent to nil
2 May 2022 4:11:37.162151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	MessageNotUnderstood: receiver of "isTemp" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #isTemp
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isTemp
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

OCASTSemanticAnalyzer>>visitVariableNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aVariableNode: 	RBVariableNode(testRemoveAllBlogPosts)
		var: 	ni
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBVariableNode>>acceptVisitor:
	Receiver: RBVariableNode(testRemoveAllBlogPosts)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testRemoveAllBlogPosts blog)
		properties: 	nil
		parentheses: 	nil
		name: 	#testRemoveAllBlogPosts
		start: 	1


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBVariableNode(testRemoveAllBlogPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testRemoveAllBlogPosts blog
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testRemoveAllBlogPosts blog)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts)
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBVariableNode(testRemoveAllBlogPosts)
		selector: 	#blog
		keywordsPositions: 	an IntegerArray(25)
		arguments: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testRemoveAllBlogPosts blog
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitMessageNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMessageNode: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMessageNode>>acceptVisitor:
	Receiver: RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts)
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self asser...etc...
		properties: 	nil
		parentheses: 	nil
		receiver: 	RBMessageNode(testRemoveAllBlogPosts blog)
		selector: 	#removeAllPosts
		keywordsPositions: 	an IntegerArray(30)
		arguments: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


[ :each | self visitNode: each ] in OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ sel...etc...
		each: 	RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OrderedCollection>>do:
	Receiver: an OrderedCollection(RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts) RBReturnNod...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visitNode: each ]
		index: 	
	Receiver's instance variables: 
		array: 	an Array(RBMessageNode(testRemoveAllBlogPosts blog removeAllPosts) RBRet...etc...
		firstIndex: 	1
		lastIndex: 	2


OCASTSemanticAnalyzer>>visitSequenceNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aSequenceNode: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ sel...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBSequenceNode>>acceptVisitor:
	Receiver: RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert: blog size equals...etc...
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog ...etc...
		properties: 	nil
		leftBar: 	nil
		rightBar: 	nil
		statements: 	an OrderedCollection(RBMessageNode(testRemoveAllBlogPosts blog remo...etc...
		periods: 	an OrderedCollection(44)
		temporaries: 	#()


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>visitMethodNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aMethodNode: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: ...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>acceptVisitor:
	Receiver: DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog size equals: 0
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	an OCASTSemanticAnalyze
	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert:...etc...
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer(RBProgramNodeVisitor)>>visitNode:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog s...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


OCASTSemanticAnalyzer>>analyze:
	Receiver: an OCASTSemanticAnalyzer
	Arguments and temporary variables: 
		aNode: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog s...etc..
	Receiver's instance variables: 
		scope: 	an OCMethodScope 4
		blockcounter: 	nil
		compilationContext: 	a CompilationContext


RBMethodNode>>doSemanticAnalysis
	Receiver: DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog size equals: 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		parent: 	nil
		properties: 	nil
		scope: 	an OCMethodScope 4
		selector: 	#DoIt
		keywordsPositions: 	nil
		body: 	RBSequenceNode(testRemoveAllBlogPosts blog removeAllPosts.
^ self assert:...etc...
		source: 	nil
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


[ ast doSemanticAnalysis ] in OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ ast doSemanticAnalysis ]
	Arguments and temporary variables: 
		exception: 	OCSemanticError
		handlerAction: 	[ :ex | 
ex defaultAction.
^ self compilationContext failBlock v...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>doSemanticAnalysis
		startpc: 	77
		numArgs: 	0


OpalCompiler>>doSemanticAnalysis
	Receiver: an OpalCompiler
	Arguments and temporary variables: 

	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


[ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ] in [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	Arguments and temporary variables: 
		exception: 	ReparseAfterSourceEditing
		handlerAction: 	[ :notification | 
self source: notification newSource.
notifica...etc..
	Receiver's instance variables: 
		outerContext: 	[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self...etc...
		startpc: 	245
		numArgs: 	0


[ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: ReparseAfterSourceEditing
	do: [ :notification | 
		self source: notification newSource.
		notification retry ].
cm := compilationContext optionEmbeddSources
	ifTrue: [ ast generateWithSource ]
	ifFalse: [ ast generate: self compilationContext compiledMethodTrailer ] ] in OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


BlockClosure>>on:do:
	Receiver: [ [ self parse.
self transformDoit.
self doSemanticAnalysis.
self callPlugins ]
	on: Repar...etc...
	Arguments and temporary variables: 
		exception: 	SyntaxErrorNotification
		handlerAction: 	[ :exception | 
self compilationContext requestor
	ifNotNil: [ s...etc..
	Receiver's instance variables: 
		outerContext: 	OpalCompiler>>compile
		startpc: 	241
		numArgs: 	0


OpalCompiler>>compile
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		cm: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	testRemoveAllBlogPosts blog removeAllPosts.
	^ self assert: blog siz...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'testRemoveAllBlogPosts
	blog removeAllPosts.
	self assert: blog size ...etc...
		aController: 	a RubScrolledTextMorph(737210624)
		aClass: 	TBBlogTest
		oldClass: 	TBBlogTest
		class: 	nil
		newClassName: 	'testRemoveAllBlogPosts'
		defTokens: 	an OrderedCollection('testRemoveAllBlogPosts' 'blog' 'removeAllPosts...etc...
		keywdIx: 	0
		classCompiler: 	an OpalCompile
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(798388224)
	Arguments and temporary variables: 
		aString: 	'testRemoveAllBlogPosts
	blog removeAllPosts.
	self assert: blog size ...etc...
		aController: 	a RubScrolledTextMorph(737210624)
		aClass: 	TBBlogTes
	Receiver's instance variables: 
		bounds: 	(68.0@46.0) corner: (918.0@666.0)
		owner: 	a SystemWindow(172461056) named: TinyBlog-Tests
		submorphs: 	an Array(a ProportionalSplitterMorph(621063936) a PanelMorph(8344340...etc...
		fullBounds: 	(68@46) corner: (918@666)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (298812672) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		navigationPanel: 	a PanelMorph(834434048)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(439078144) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(707551488)
		toolbar: 	a ClyToolbarMorph(1031299328)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyInheritanceAnalysis...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(439078144)
		classView: 	a ClyQueryViewMorph(408623360)
		methodGroupView: 	a ClyQueryViewMorph(101218816)
		methodView: 	a ClyQueryViewMorph(325452032)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from empty scope


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(567284736)
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		bounds: 	(70.0@382.0) corner: (917.0@665.0)
		owner: 	a Morph(702577152)
		submorphs: 	an Array(a ProportionalSplitterMorph(506271744) a ClyQueryViewMorph(...etc...
		fullBounds: 	(70@382) corner: (917@665)
		color: 	Color transparent
		extension: 	a MorphExtension (228417792) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(798388224)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(570639104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(392691712)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(737210624)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	TBBlogTest


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(567284736)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(70.0@382.0) corner: (917.0@665.0)
		owner: 	a Morph(702577152)
		submorphs: 	an Array(a ProportionalSplitterMorph(506271744) a ClyQueryViewMorph(...etc...
		fullBounds: 	(70@382) corner: (917@665)
		color: 	Color transparent
		extension: 	a MorphExtension (228417792) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(798388224)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(570639104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(392691712)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(737210624)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	TBBlogTest


BlockClosure>>on:do:
	Receiver: [ self changesAreAboutApply.
applied := self applyChanges ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :err | 
textModel text: self editingText.
textMorph hasUnaccep...etc..
	Receiver's instance variables: 
		outerContext: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply...etc...
		startpc: 	140
		numArgs: 	0


[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(567284736)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(70.0@382.0) corner: (917.0@665.0)
		owner: 	a Morph(702577152)
		submorphs: 	an ArraTHERE_BE_DRAGONS_HERE
Instance of TBBlog did not understand #allCategories
2 May 2022 4:17:37.951151 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBBlog(Object)>>doesNotUnderstand: #allCategories
	Receiver: a TBBlog
	Arguments and temporary variables: 
		aMessage: 	allCategories
		exception: 	MessageNotUnderstood: TBBlog>> #allCategories
		resumeValue: 	ni
	Receiver's instance variables: 
		posts: 	an OrderedCollection(a TBPost a TBPost)


TBBlogTest>>testAllCategories
	Receiver: TBBlogTest>>#testAllCategories
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testAllCategories
		expectedFails: 	nil
		blog: 	a TBBlog
		post: 	a TBPost
		first: 	a TBPost


TBBlogTest(TestCase)>>performTest
	Receiver: TBBlogTest>>#testAllCategories
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testAllCategories
		expectedFails: 	nil
		blog: 	a TBBlog
		post: 	a TBPost
		first: 	a TBPost


[ self setUp.
self performTest ] in TBBlogTest(TestCase)>>runCase
	Receiver: TBBlogTest>>#testAllCategories
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testAllCategories
		expectedFails: 	nil
		blog: 	a TBBlog
		post: 	a TBPost
		first: 	a TBPost


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	TBBlogTest(TestCase)>>runCase
		startpc: 	97
		numArgs: 	0


TBBlogTest(TestCase)>>runCase
	Receiver: TBBlogTest>>#testAllCategories
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testAllCategories
		expectedFails: 	nil
		blog: 	a TBBlog
		post: 	a TBPost
		first: 	a TBPost


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	TBBlogTest>>#testAllCategorie
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	TBBlogTest>>#testAllCategories
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc..
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	115
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	TBBlogTest>>#testAllCategorie
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	TBBlogTest>>#testAllCategories
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume a...etc...
	Arguments and temporary variables: 
		exception: 	an ExceptionSet
		handlerAction: 	[ :err | 
"error here means that test is failed. So we should ch...etc..
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCaseSafelly:
		startpc: 	110
		numArgs: 	0


TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	TBBlogTest>>#testAllCategorie
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	TBBlogTest>>#testAllCategories
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ self runTestCaseSafelly: aTestCase ] in [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	TBBlogTest>>#testAllCategorie
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	TBBlogTest>>#testAllCategories
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ensure:
	Receiver: [ self runTestCaseSafelly: aTestCase ]
	Arguments and temporary variables: 
		aBlock: 	[ testCompleted := true.
watchDogSemaphore signal ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted...etc...
		startpc: 	101
		numArgs: 	0


[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	TBBlogTest>>#testAllCategorie
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	TBBlogTest>>#testAllCategories
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ifCurtailed:
	Receiver: [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemap...etc...
	Arguments and temporary variables: 
		aBlock: 	[ forkedProcesses removeAll.
failedProcesses removeAll ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCase:
		startpc: 	96
		numArgs: 	0


TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	TBBlogTest>>#testAllCategorie
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	TBBlogTest>>#testAllCategories
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ testEnv runTestCase: aTestCase ] in DefaultExecutionEnvironment>>runTestCase:
	Receiver: a DefaultExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	TBBlogTest>>#testAllCategories
		testEnv: 	a TestExecutionEnvironmen
	Receiver's instance variables: 
a DefaultExecutionEnvironment

[ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ] in CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	ni
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


BlockClosure>>ensure:
	Receiver: [ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ self value: current.
anExecutionEnvironment deactivated ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	CurrentExecutionEnvironment class>>activate:for:
		startpc: 	91
		numArgs: 	0


CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	ni
	Receiver's instance variables: 
		superclassTHERE_BE_DRAGONS_HERE
#selectAll: was sent to nil
14 May 2022 10:57:43.200769 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	MessageNotUnderstood: receiver of "selectAll:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>selectAll
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>current
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>createDemoPosts
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog createDemoPosts
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(938113536)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc..
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(938113536)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(797455872)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	940575
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	940587
		nArgs: 	
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	940575
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	940587
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(425211392))(a FadingMorp...etc...
		lastStepTime: 	940532
		lastStepMessage: 	nil
		lastCycleTime: 	940587
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	940532
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		now: 	940587
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(425211392))(a FadingMorp...etc...
		lastStepTime: 	940532
		lastStepMessage: 	nil
		lastCycleTime: 	940587
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	940532
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	ni
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(425211392))(a FadingMorp...etc...
		lastStepTime: 	940532
		lastStepMessage: 	nil
		lastCycleTime: 	940587
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	940532
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a Fading...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(425211392))(a FadingMorp...etc...
		lastStepTime: 	940532
		lastStepMessage: 	nil
		lastCycleTime: 	940587
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	940532
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(425211392))(a FadingMorp...etc...
		lastStepTime: 	940532
		lastStepMessage: 	nil
		lastCycleTime: 	940587
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	940532
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a Fading...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
UndefinedObject>>doesNotUnderstand: #selectAll:
TBBlog class(Class)>>selectAll
TBBlog class>>current
TBBlog class>>createDemoPosts
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
MorphicAlarm(MessageSend)>>value
MorphicAlarm>>value:
WorldState>>triggerAlarmsBefore:
WorldState>>runLocalStepMethodsIn:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#count: was sent to nil
14 May 2022 10:58:04.694769 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	MessageNotUnderstood: receiver of "count:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>count
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog count
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(938113536)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc..
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(938113536)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(797455872)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	962081
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	962091
		nArgs: 	
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	962081
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	962091
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(819238400))(a FadingMorp...etc...
		lastStepTime: 	962034
		lastStepMessage: 	nil
		lastCycleTime: 	962091
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	962034
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		now: 	962091
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(819238400))(a FadingMorp...etc...
		lastStepTime: 	962034
		lastStepMessage: 	nil
		lastCycleTime: 	962091
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	962034
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	ni
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(819238400))(a FadingMorp...etc...
		lastStepTime: 	962034
		lastStepMessage: 	nil
		lastCycleTime: 	962091
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	962034
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a Fading...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(819238400))(a FadingMorp...etc...
		lastStepTime: 	962034
		lastStepMessage: 	nil
		lastCycleTime: 	962091
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	962034
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(819238400))(a FadingMorp...etc...
		lastStepTime: 	962034
		lastStepMessage: 	nil
		lastCycleTime: 	962091
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	962034
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a Fading...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #count:
UndefinedObject>>doesNotUnderstand: #count:
TBBlog class(Class)>>count
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
MorphicAlarm(MessageSend)>>value
MorphicAlarm>>value:
WorldState>>triggerAlarmsBefore:
WorldState>>runLocalStepMethodsIn:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#selectAll: was sent to nil
14 May 2022 10:58:45.572769 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	MessageNotUnderstood: receiver of "selectAll:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>selectAll
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog selectAll
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(938113536)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(938113536)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(797455872)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(938113536)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (866@50)
		owner: 	a TransformWithLayoutMorph(49255936)
		submorphs: 	an Array(a RubPrimarySelectionMorph(382203392) a RubCursor(700421632...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1068096000) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1063311872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(700421632)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673658368))
		getMenuPolicy: 	a RubEditingArea(938113536)
		mouseDownPoint: 	(341@79)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(797455872)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(959986176) named: Pl...etc...
		lastStepTime: 	1002909
		lastStepMessage: 	nil
		lastCycleTime: 	1002959
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	1002909
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(959986176) named: Pl...etc...
		lastStepTime: 	1002909
		lastStepMessage: 	nil
		lastCycleTime: 	1002959
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	1002909
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(959986176) named: Pl...etc...
		lastStepTime: 	1002909
		lastStepMessage: 	nil
		lastCycleTime: 	1002959
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(700421632)))
		lastAlarmTime: 	1002909
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
UndefinedObject>>doesNotUnderstand: #selectAll:
TBBlog class(Class)>>selectAll
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of TBBlog class are not indexable
14 May 2022 10:59:47.942769 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBBlog class(Object)>>error:
	Receiver: TBBlog
	Arguments and temporary variables: 
		aString: 	'Instances of TBBlog class are not indexable
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class(Object)>>errorNotIndexable
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class(Object)>>size
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog size
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1054333440)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1054333440)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(365328896)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1054333440)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (865@31)
		owner: 	a TransformWithLayoutMorph(220804608)
		submorphs: 	an Array(a RubPrimarySelectionMorph(910768640) a RubCursor(25089536)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (773036544) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(701560320)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(25089536)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(149124608))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(365328896)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1065292
		lastStepMessage: 	nil
		lastCycleTime: 	1065335
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1065292
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1065292
		lastStepMessage: 	nil
		lastCycleTime: 	1065335
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1065292
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1065292
		lastStepMessage: 	nil
		lastCycleTime: 	1065335
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1065292
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
TBBlog class(Object)>>error:
TBBlog class(Object)>>errorNotIndexable
TBBlog class(Object)>>size
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#count: was sent to nil
14 May 2022 11:00:02.019769 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	MessageNotUnderstood: receiver of "count:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>count
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog count
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1054333440)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1054333440)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(365328896)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1054333440)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (865@31)
		owner: 	a TransformWithLayoutMorph(220804608)
		submorphs: 	an Array(a RubPrimarySelectionMorph(153598464) a RubCursor(25089536)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (773036544) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(701560320)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(25089536)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(254039552))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(187.0@17.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(365328896)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1079370
		lastStepMessage: 	nil
		lastCycleTime: 	1079412
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1079370
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1079370
		lastStepMessage: 	nil
		lastCycleTime: 	1079412
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1079370
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1079370
		lastStepMessage: 	nil
		lastCycleTime: 	1079412
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1079370
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #count:
UndefinedObject>>doesNotUnderstand: #count:
TBBlog class(Class)>>count
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#count: was sent to nil
14 May 2022 11:01:59.998769 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	MessageNotUnderstood: receiver of "count:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>count
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog count
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1054333440)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1054333440)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(365328896)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1054333440)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (865@31)
		owner: 	a TransformWithLayoutMorph(220804608)
		submorphs: 	an Array(a RubPrimarySelectionMorph(153598464) a RubCursor(25089536)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (773036544) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(701560320)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(25089536)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(246749696))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(365328896)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1197367
		lastStepMessage: 	nil
		lastCycleTime: 	1197391
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1197367
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1197367
		lastStepMessage: 	nil
		lastCycleTime: 	1197391
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1197367
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(744208896) named: Pl...etc...
		lastStepTime: 	1197367
		lastStepMessage: 	nil
		lastCycleTime: 	1197391
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(25089536)))
		lastAlarmTime: 	1197367
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #count:
UndefinedObject>>doesNotUnderstand: #count:
TBBlog class(Class)>>count
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#count: was sent to nil
14 May 2022 11:14:31.533769 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	MessageNotUnderstood: receiver of "count:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #count:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	count: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>count
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog count
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(834016768)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(834016768)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(238467584)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(834016768)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (865@50)
		owner: 	a TransformWithLayoutMorph(694049280)
		submorphs: 	an Array(a RubCursor(288766464) a RubPrimarySelectionMorph(105865779...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (959486464) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(828814848)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(288766464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(634287616))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(238467584)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(833149440) named: Pl...etc...
		lastStepTime: 	1948891
		lastStepMessage: 	nil
		lastCycleTime: 	1948920
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(288766464)))
		lastAlarmTime: 	1948891
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(833149440) named: Pl...etc...
		lastStepTime: 	1948891
		lastStepMessage: 	nil
		lastCycleTime: 	1948920
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(288766464)))
		lastAlarmTime: 	1948891
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(833149440) named: Pl...etc...
		lastStepTime: 	1948891
		lastStepMessage: 	nil
		lastCycleTime: 	1948920
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(288766464)))
		lastAlarmTime: 	1948891
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #count:
UndefinedObject>>doesNotUnderstand: #count:
TBBlog class(Class)>>count
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#selectAll: was sent to nil
14 May 2022 11:17:33.936915 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	MessageNotUnderstood: receiver of "selectAll:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>selectAll
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>current
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>DoIt
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ self current
		writeBlogPost:
			((TBPost
				title: 'Welcome in T...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	TBBlog
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClyTextEditor(RubSmalltalkEditor)>>evaluate:andDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result asScriptResultStringInCalypso ]
	o...etc...
		result: 	nil
		rcvr: 	TBBlog
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(308242688)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


ClyTextEditor(RubSmalltalkEditor)>>evaluateSelectionAndDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result asScriptResultStringInCalypso ]
	o...etc..
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(308242688)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


ClyTextEditor>>printIt
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		printString: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(308242688)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


RubEditingArea(Object)>>perform:orSendTo:
	Receiver: a RubEditingArea(308242688)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a ClyTextEdito
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1340@259)
		owner: 	a TransformWithLayoutMorph(905911552)
		submorphs: 	an Array(a RubCursor(276184832) a RubPrimarySelectionMorph(491805952...etc...
		fullBounds: 	(0@0) corner: (1340@259)
		color: 	Color transparent
		extension: 	a MorphExtension (54179584) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a RubScrolledTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a ClyTextEditor
		scrollPane: 	a RubTextScrollPane(1072820992)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a ClyTextEditingMode
		cursor: 	a RubCursor(276184832)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(308242688)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	ClyTextEditor


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ] ].
self showShortcut.
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(70417152)'Print it'
	Arguments and temporary variables: 
		evt: 	[(691@653) mouseUp 9206546 nil]
		w: 	a WorldMorph(1058399488) [world]
		selArgCount: 	
	Receiver's instance variables: 
		bounds: 	(623.0@645.0) corner: (811.0@662.0)
		owner: 	a MenuMorph(1039769856)
		submorphs: 	#()
		fullBounds: 	(623.0@645.0) corner: (811.0@662.0)
		color: 	Color white
		extension: 	a MorphExtension (65890560)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(308242688)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	230
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc..
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(70417152)'Print it'
	Arguments and temporary variables: 
		evt: 	[(691@653) mouseUp 9206546 nil]
		w: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		bounds: 	(623.0@645.0) corner: (811.0@662.0)
		owner: 	a MenuMorph(1039769856)
		submorphs: 	#()
		fullBounds: 	(623.0@645.0) corner: (811.0@662.0)
		color: 	Color white
		extension: 	a MorphExtension (65890560)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(308242688)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(70417152)'Print it'
	Arguments and temporary variables: 
		evt: 	[(691@653) mouseUp 9206546 nil
	Receiver's instance variables: 
		bounds: 	(623.0@645.0) corner: (811.0@662.0)
		owner: 	a MenuMorph(1039769856)
		submorphs: 	#()
		fullBounds: 	(623.0@645.0) corner: (811.0@662.0)
		color: 	Color white
		extension: 	a MorphExtension (65890560)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(308242688)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(70417152)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(691@653) mouseUp 9206546 nil
	Receiver's instance variables: 
		bounds: 	(623.0@645.0) corner: (811.0@662.0)
		owner: 	a MenuMorph(1039769856)
		submorphs: 	#()
		fullBounds: 	(623.0@645.0) corner: (811.0@662.0)
		color: 	Color white
		extension: 	a MorphExtension (65890560)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(308242688)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(691@653) mouseUp 9206546 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(70417152)'Print it
	Receiver's instance variables: 
		timeStamp: 	9206546
		source: 	a HandMorph(554752512)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(691@653)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(70417152)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(691@653) mouseUp 9206546 nil
	Receiver's instance variables: 
		bounds: 	(623.0@645.0) corner: (811.0@662.0)
		owner: 	a MenuMorph(1039769856)
		submorphs: 	#()
		fullBounds: 	(623.0@645.0) corner: (811.0@662.0)
		color: 	Color white
		extension: 	a MorphExtension (65890560)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(308242688)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(691@653) mouseUp 9206546 nil]
		aMorph: 	a ToggleMenuItemMorph(70417152)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	tru
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(70417152)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(691@653) mouseUp 9206546 nil
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(70417152)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(691@653) mouseUp 9206546 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	9206546
		source: 	a HandMorph(554752512)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(691@653)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(691@653) mouseUp 9206546 nil]
		aMorph: 	a ToggleMenuItemMorph(70417152)'Print it
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(70417152)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(691@653) mouseUp 9206546 nil]
		aMorph: 	a ToggleMenuItemMorph(70417152)'Print it
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(70417152)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(70417152)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(691@653) mouseUp 9206546 nil]
		defaultDispatcher: 	a MorphicEventDispatche
	Receiver's instance variables: 
		bounds: 	(623.0@645.0) corner: (811.0@662.0)
		owner: 	a MenuMorph(1039769856)
		submorphs: 	#()
		fullBounds: 	(623THERE_BE_DRAGONS_HERE
#selectAll: was sent to nil
14 May 2022 11:20:50.614915 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	MessageNotUnderstood: receiver of "selectAll:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>selectAll
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>current
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>createDemoPosts
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog createDemoPosts
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(659240704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(659240704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(910320896)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(659240704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (865@31)
		owner: 	a TransformWithLayoutMorph(991985408)
		submorphs: 	an Array(a RubCursor(72180480) a RubPrimarySelectionMorph(885497088)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (489490688) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(312140032)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(72180480)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(936568576))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(910320896)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(401920768) named: Pl...etc...
		lastStepTime: 	340320
		lastStepMessage: 	nil
		lastCycleTime: 	340343
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(72180480)))
		lastAlarmTime: 	340320
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(401920768) named: Pl...etc...
		lastStepTime: 	340320
		lastStepMessage: 	nil
		lastCycleTime: 	340343
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(72180480)))
		lastAlarmTime: 	340320
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(401920768) named: Pl...etc...
		lastStepTime: 	340320
		lastStepMessage: 	nil
		lastCycleTime: 	340343
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(72180480)))
		lastAlarmTime: 	340320
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
UndefinedObject>>doesNotUnderstand: #selectAll:
TBBlog class(Class)>>selectAll
TBBlog class>>current
TBBlog class>>createDemoPosts
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#selectAll: was sent to nil
14 May 2022 11:21:34.335915 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	MessageNotUnderstood: receiver of "selectAll:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: selectAll: TBBlog
	Arguments and temporary variables: 
		receiver: 	ni
	Receiver's instance variables: 
		selector: 	#selectAll:
		args: 	{TBBlog}
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	MessageNotUnderstood: receiver of "selectAll:" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "selectAll:" is ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #selectAll:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	selectAll: TBBlog
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBBlog class(Class)>>selectAll
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>current
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


TBBlog class>>createDemoPosts
	Receiver: TBBlog
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allBlogPosts->TBBlog>>#allBlogPosts #allBlogPos...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBBlog
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#TinyBlog
		uniqueInstance: 	a TBBlog


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ TBBlog createDemoPosts
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(659240704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(659240704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(910320896)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(659240704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (865@31)
		owner: 	a TransformWithLayoutMorph(991985408)
		submorphs: 	an Array(a RubCursor(72180480) a RubPrimarySelectionMorph(885497088)...etc...
		fullBounds: 	(0@0) corner: (865@31)
		color: 	Color transparent
		extension: 	a MorphExtension (489490688) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(312140032)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(72180480)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(936568576))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(910320896)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(401920768) named: Pl...etc...
		lastStepTime: 	384015
		lastStepMessage: 	nil
		lastCycleTime: 	384063
		alarms: 	a Heap()
		lastAlarmTime: 	384015
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(401920768) named: Pl...etc...
		lastStepTime: 	384015
		lastStepMessage: 	nil
		lastCycleTime: 	384063
		alarms: 	a Heap()
		lastAlarmTime: 	384015
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(554752512))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(401920768) named: Pl...etc...
		lastStepTime: 	384015
		lastStepMessage: 	nil
		lastCycleTime: 	384063
		alarms: 	a Heap()
		lastAlarmTime: 	384015
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(554752512)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1920@1017)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(1058399488) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(160664576) a TaskbarMorph(74489600) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (306633216) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(10...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
UndefinedObject>>doesNotUnderstand: #selectAll:
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #selectAll:
UndefinedObject>>doesNotUnderstand: #selectAll:
TBBlog class(Class)>>selectAll
TBBlog class>>current
TBBlog class>>createDemoPosts
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostComponent>> #post:
14 May 2022 11:44:01.51749 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostComponent(Object)>>doesNotUnderstand: #post:
	Receiver: a TBPostComponent
	Arguments and temporary variables: 
		aMessage: 	post: a TBPost
		exception: 	MessageNotUnderstood: TBPostComponent>> #post:
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		post: 	a TBPost


[ :p | html render: (TBPostComponent new post: p) ] in TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		p: 	a TBPos
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


OrderedCollection>>do:
	Receiver: an OrderedCollection(a TBPost a TBPost a TBPost a TBPost a TBPost)
	Arguments and temporary variables: 
		aBlock: 	[ :p | html render: (TBPostComponent new post: p) ]
		index: 	
	Receiver's instance variables: 
		array: 	an Array(a TBPost a TBPost a TBPost a TBPost a TBPost nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	5


TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAPainter)>>renderWithContext:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


TBPostsListComponent(WAPainter)>>renderOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	nil


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	nil


TBApplicationRootComponent>>renderContentOn:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAPainter)>>renderWithContext:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/TinyBlog?_s=6OGprj4drlZCxu8h&_k=IH8CulPsSWS2Lgqk
		actionBaseUrl: 	/TinyBlog?_s=6OGprj4drlZCxu8h&_k=IH8CulPsSWS2Lgqk
		htmlRoot: 	a WAHtmlRoo
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		response: 	a WABufferedResponse status: 200 message: 'OK
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
TBPostComponent(Object)>>doesNotUnderstand: #post:
[ :p | html render: (TBPostComponent new post: p) ] in TBPostsListComponent>>renderContentOn:
OrderedCollection>>do:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostComponent>> #post:
14 May 2022 11:44:31.54049 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostComponent(Object)>>doesNotUnderstand: #post:
	Receiver: a TBPostComponent
	Arguments and temporary variables: 
		aMessage: 	post: a TBPost
		exception: 	MessageNotUnderstood: TBPostComponent>> #post:
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		post: 	a TBPost


[ :p | html render: (TBPostComponent new post: p) ] in TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		p: 	a TBPos
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


OrderedCollection>>do:
	Receiver: an OrderedCollection(a TBPost a TBPost a TBPost a TBPost a TBPost)
	Arguments and temporary variables: 
		aBlock: 	[ :p | html render: (TBPostComponent new post: p) ]
		index: 	
	Receiver's instance variables: 
		array: 	an Array(a TBPost a TBPost a TBPost a TBPost a TBPost nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	5


TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAPainter)>>renderWithContext:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


TBPostsListComponent(WAPainter)>>renderOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	nil


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	nil


TBApplicationRootComponent>>renderContentOn:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAPainter)>>renderWithContext:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/TinyBlog?_s=42c9AZ5PN53Ab8xT&_k=XTxDe0of7E23VzPD
		actionBaseUrl: 	/TinyBlog?_s=42c9AZ5PN53Ab8xT&_k=XTxDe0of7E23VzPD
		htmlRoot: 	a WAHtmlRoo
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		response: 	a WABufferedResponse status: 200 message: 'OK
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
TBPostComponent(Object)>>doesNotUnderstand: #post:
[ :p | html render: (TBPostComponent new post: p) ] in TBPostsListComponent>>renderContentOn:
OrderedCollection>>do:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFilTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostComponent>> #post:
14 May 2022 11:44:36.49149 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostComponent(Object)>>doesNotUnderstand: #post:
	Receiver: a TBPostComponent
	Arguments and temporary variables: 
		aMessage: 	post: a TBPost
		exception: 	MessageNotUnderstood: TBPostComponent>> #post:
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		post: 	a TBPost


[ :p | html render: (TBPostComponent new post: p) ] in TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		p: 	a TBPos
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


OrderedCollection>>do:
	Receiver: an OrderedCollection(a TBPost a TBPost a TBPost a TBPost a TBPost)
	Arguments and temporary variables: 
		aBlock: 	[ :p | html render: (TBPostComponent new post: p) ]
		index: 	
	Receiver's instance variables: 
		array: 	an Array(a TBPost a TBPost a TBPost a TBPost a TBPost nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	5


TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAPainter)>>renderWithContext:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


TBPostsListComponent(WAPainter)>>renderOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	nil


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	nil


TBApplicationRootComponent>>renderContentOn:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBApplicationRootComponent(WAPainter)>>renderWithContext:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/TinyBlog?_s=exTpyBVyFGyME0vk&_k=Ifj5C7XHwYGDnZxU
		actionBaseUrl: 	/TinyBlog?_s=exTpyBVyFGyME0vk&_k=Ifj5C7XHwYGDnZxU
		htmlRoot: 	a WAHtmlRoo
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		response: 	a WABufferedResponse status: 200 message: 'OK
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
TBPostComponent(Object)>>doesNotUnderstand: #post:
[ :p | html render: (TBPostComponent new post: p) ] in TBPostsListComponent>>renderContentOn:
OrderedCollection>>do:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WADispatcher(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
14 May 2022 11:50:36.77249 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostsListComponent(Object)>>doesNotUnderstand: #readSelectedPosts
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aMessage: 	readSelectedPosts
		exception: 	MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>postComponents
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>children
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent(WAPresenter)>>childrenDo:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | self visit: each ] in WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponent
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/seaside/issues/detail?id=697"
		WAChildComponentShouldNotBeSelfError
			signal:
				self class name greaseString
					,
						' >> #children - the returned collection contains a reference to self. Exception raised to avoid infinite recursion.' ].
each isNil
	ifFalse: [ aBlock value: each ] ] in TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each ]
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


Array(SequenceableCollection)>>do:
	Receiver: an Array(a TBPostsListComponent)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/se...etc...
		index: 	
	Receiver's instance variables: 
an Array(a TBPostsListComponent)

TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAVisitor)>>start:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		anObject: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAInitialRenderLoopContinuation>>prepareRoot:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		indeTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
14 May 2022 11:50:46.44049 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostsListComponent(Object)>>doesNotUnderstand: #readSelectedPosts
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aMessage: 	readSelectedPosts
		exception: 	MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>postComponents
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>children
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent(WAPresenter)>>childrenDo:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | self visit: each ] in WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponent
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/seaside/issues/detail?id=697"
		WAChildComponentShouldNotBeSelfError
			signal:
				self class name greaseString
					,
						' >> #children - the returned collection contains a reference to self. Exception raised to avoid infinite recursion.' ].
each isNil
	ifFalse: [ aBlock value: each ] ] in TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each ]
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


Array(SequenceableCollection)>>do:
	Receiver: an Array(a TBPostsListComponent)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/se...etc...
		index: 	
	Receiver's instance variables: 
an Array(a TBPostsListComponent)

TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAVisitor)>>start:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		anObject: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAInitialRenderLoopContinuation>>prepareRoot:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
TBPostsListComponent(Object)>>doesNotUnderstand: #readSelectedPosts
TBPostsListComponent>>postComponents
TBPostsListComponent>>children
TBPostsListComponent(WAPresenter)>>childrenDo:
WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WAAllPresenterGuide(WAPresenterGuide)>>visit:
[ :each | self visit: each ] in WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/seaside/issues/detail?id=697"
		WAChildComponentShouldNotBeSelfError
			signal:
				self class name greaseString
					,
						' >> #children - the returned collection contains a reference to self. Exception raised to avoid infinite recursion.' ].
each isNil
	ifFalse: [ aBlock value: each ] ] in TBApplicationRootComponent(WAPresenter)>>childrenDo:
Array(SequenceableCollection)>>do:
TBApplicationRootComponent(WAPresenter)>>childrenDo:
WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WAAllPresenterGuide(WAPresenterGuide)>>visit:
WAAllPresenterGuide(WAVisitor)>>start:
WAInitialRenderLoopContinuation>>prepareRoot:
WAInitialRenderLoopContinuation>>basicPerformAction
[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
 - - - - - - - - - - - - - - -  
			-THERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
14 May 2022 11:51:04.28049 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostsListComponent(Object)>>doesNotUnderstand: #readSelectedPosts
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aMessage: 	readSelectedPosts
		exception: 	MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>postComponents
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>children
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent(WAPresenter)>>childrenDo:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | self visit: each ] in WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponent
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/seaside/issues/detail?id=697"
		WAChildComponentShouldNotBeSelfError
			signal:
				self class name greaseString
					,
						' >> #children - the returned collection contains a reference to self. Exception raised to avoid infinite recursion.' ].
each isNil
	ifFalse: [ aBlock value: each ] ] in TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each ]
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


Array(SequenceableCollection)>>do:
	Receiver: an Array(a TBPostsListComponent)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/se...etc...
		index: 	
	Receiver's instance variables: 
an Array(a TBPostsListComponent)

TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAVisitor)>>start:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		anObject: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAInitialRenderLoopContinuation>>prepareRoot:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
TBPostsListComponent(Object)>>doesNotUnderstand: #readSelectedPosts
TBPostsListComponent>>postComponents
TBPostsListComponent>>children
TBPostsListComponent(WAPresenter)>>childrenDo:
WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WAAllPresenterGuide(WAPresenterGuide)>>visit:
[ :each | self visit: each ] in WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/seaside/issues/detail?id=697"
		WAChildComponentShouldNotBeSelfError
			signal:
				self class name greaseString
					,
						' >> #children - the returned collection contains a reference to self. Exception raised to avoid infinite recursion.' ].
each isNil
	ifFalse: [ aBlock value: each ] ] in TBApplicationRootComponent(WAPresenter)>>childrenDo:
Array(SequenceableCollection)>>do:
TBApplicationRootComponent(WAPresenter)>>childrenDo:
WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WAAllPresenterGuide(WAPresenterGuide)>>visit:
WAAllPresenterGuide(WAVisitor)>>start:
WAInitialRenderLoopContinuation>>prepareRoot:
WAInitialRenderLoopContinuation>>basicPerformAction
[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext classTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
14 May 2022 11:51:05.59249 am

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostsListComponent(Object)>>doesNotUnderstand: #readSelectedPosts
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aMessage: 	readSelectedPosts
		exception: 	MessageNotUnderstood: TBPostsListComponent>> #readSelectedPosts
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>postComponents
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent>>children
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


TBPostsListComponent(WAPresenter)>>childrenDo:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection()


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | self visit: each ] in WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponent
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/seaside/issues/detail?id=697"
		WAChildComponentShouldNotBeSelfError
			signal:
				self class name greaseString
					,
						' >> #children - the returned collection contains a reference to self. Exception raised to avoid infinite recursion.' ].
each isNil
	ifFalse: [ aBlock value: each ] ] in TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each ]
		each: 	a TBPostsListComponen
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


Array(SequenceableCollection)>>do:
	Receiver: an Array(a TBPostsListComponent)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/se...etc...
		index: 	
	Receiver's instance variables: 
an Array(a TBPostsListComponent)

TBApplicationRootComponent(WAPresenter)>>childrenDo:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aBlock: 	[ :each | self visit: each 
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>accept:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


TBApplicationRootComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 
		aVisitor: 	a WAAllPresenterGuid
	Receiver's instance variables: 
		decoration: 	nil
		main: 	a TBPostsListComponent


WAAllPresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAAllPresenterGuide(WAVisitor)>>start:
	Receiver: a WAAllPresenterGuide
	Arguments and temporary variables: 
		anObject: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		client: 	a WAInitialRequestVisitor


WAInitialRenderLoopContinuation>>prepareRoot:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aComponent: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	a TBApplicationRootComponen
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
TBPostsListComponent(Object)>>doesNotUnderstand: #readSelectedPosts
TBPostsListComponent>>postComponents
TBPostsListComponent>>children
TBPostsListComponent(WAPresenter)>>childrenDo:
WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WAAllPresenterGuide(WAPresenterGuide)>>visit:
[ :each | self visit: each ] in WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
[ :each | 
each == self
	ifTrue: [ "fix for http://code.google.com/p/seaside/issues/detail?id=697"
		WAChildComponentShouldNotBeSelfError
			signal:
				self class name greaseString
					,
						' >> #children - the returned collection contains a reference to self. Exception raised to avoid infinite recursion.' ].
each isNil
	ifFalse: [ aBlock value: each ] ] in TBApplicationRootComponent(WAPresenter)>>childrenDo:
Array(SequenceableCollection)>>do:
TBApplicationRootComponent(WAPresenter)>>childrenDo:
WAAllPresenterGuide(WAVisiblePresenterGuide)>>visitPresenter:
WAAllPresenterGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WAAllPresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WAAllPresenterGuide(WAPresenterGuide)>>visit:
WAAllPresenterGuide(WAVisitor)>>start:
WAInitialRenderLoopContinuation>>prepareRoot:
WAInitialRenderLoopContinuation>>basicPerformAction
[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
THERE_BE_DRAGONS_HERE
Break
14 May 2022 12:01:31.60049 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBCategoriesComponent>>selectCategory:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		aCategory: 	'Unclassified'
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		aCategory: 	'Unclassified
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self selectCategory: aCategory ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	TBCategoriesComponent>>renderCategoryLinkOn:with:
		startpc: 	65
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	ni
	Receiver's instance variables: 
		key: 	'3'
		block: 	[ self selectCategory: aCategory ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil
	Receiver's instance variables: 
		key: 	'3'
		block: 	[ self selectCategory: aCategory ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKAptcEEbhNf'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HK...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKAptcEEbhNf'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gRO4HK...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?3&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		continationKey: 	'gRO4HKAptcEEbhNf'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	THERE_BE_DRAGONS_HERE
Break
14 May 2022 12:01:46.55449 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBCategoriesComponent>>selectCategory:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		aCategory: 	'Pharo'
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		aCategory: 	'Pharo
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self selectCategory: aCategory ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	TBCategoriesComponent>>renderCategoryLinkOn:with:
		startpc: 	65
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	ni
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self selectCategory: aCategory ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self selectCategory: aCategory ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKAptcEEbhNf'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HK...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKAptcEEbhNf'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HK...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		continationKey: 	'gRO4HKAptcEEbhNf'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'BPp5KP5Zvyrauu3_'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in ni
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in nil



--- The full stack ---
TBCategoriesComponent>>selectCategory:
[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
Array(SequenceableCollection)>>do:
WACallbackRegistry>>handle:
WACallbackProcessingActionContinuation>>basicPerformAction
[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
BlockClosure>>ensure:
WACallbackProcessingActionContinuation>>performAction
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
THERE_BE_DRAGONS_HERE
Break
14 May 2022 12:01:49.25549 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBCategoriesComponent>>selectCategory:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		aCategory: 	'Pharo'
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		aCategory: 	'Pharo
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self selectCategory: aCategory ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	TBCategoriesComponent>>renderCategoryLinkOn:with:
		startpc: 	65
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	ni
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self selectCategory: aCategory ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self selectCategory: aCategory ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKApt...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKAptcEEbhNf'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HK...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HKAptcEEbhNf'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gRO4HK...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc...
		continationKey: 	'gRO4HKAptcEEbhNf'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'BPp5KP5Zvyrauu3_'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=BPp5KP5Zvyrauu3_&_k=gR...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in ni
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in nil



--- The full stack ---
TBCategoriesComponent>>selectCategory:
[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
Array(SequenceableCollection)>>do:
WACallbackRegistry>>handle:
WACallbackProcessingActionContinuation>>basicPerformAction
[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
BlockClosure>>ensure:
WACallbackProcessingActionContinuation>>performAction
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilTHERE_BE_DRAGONS_HERE
Break
14 May 2022 12:01:53.92749 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBCategoriesComponent>>selectCategory:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		aCategory: 	'Pharo'
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		aCategory: 	'Pharo
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self selectCategory: aCategory ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	TBCategoriesComponent>>renderCategoryLinkOn:with:
		startpc: 	65
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	ni
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self selectCategory: aCategory ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self selectCategory: aCategory ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anl...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP8198ZYt'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlI...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlIfRP8198ZYt'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=anlTlI...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc...
		continationKey: 	'anlTlIfRP8198ZYt'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'lxSNX9oaDy09T44D'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?1&_s=lxSNX9oaDy09T44D&_k=an...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in ni
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in nil



--- The full stack ---
TBCategoriesComponent>>selectCategory:
[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
Array(SequenceableCollection)>>do:
WACallbackRegistry>>handle:
WACallbackProcessingActionContinuation>>basicPerformAction
[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
BlockClosure>>ensure:
WACallbackProcessingActionContinuation>>performAction
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WASeTHERE_BE_DRAGONS_HERE
Break
14 May 2022 12:04:13.50849 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBCategoriesComponent>>selectCategory:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		aCategory: 	'TinyBlog'
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
	Receiver: a TBCategoriesComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		aCategory: 	'TinyBlog
	Receiver's instance variables: 
		decoration: 	nil
		categories: 	a SortedCollection('Pharo' 'TinyBlog' 'Unclassified')
		postsList: 	a TBPostsListComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self selectCategory: aCategory ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	TBCategoriesComponent>>renderCategoryLinkOn:with:
		startpc: 	65
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	ni
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self selectCategory: aCategory ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self selectCategory: aCategory ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '2'->a WAActionCallback '3'->a ...etc...
		nextKey: 	4


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gxg...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHD...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHD...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHD...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHD...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHD...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHD...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHDhSSYXQ6'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagG...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagGkHDhSSYXQ6'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=GxgagG...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc...
		continationKey: 	'GxgagGkHDhSSYXQ6'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'lxSNX9oaDy09T44D'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?2&_s=lxSNX9oaDy09T44D&_k=Gx...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in ni
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in nil



--- The full stack ---
TBCategoriesComponent>>selectCategory:
[ self selectCategory: aCategory ] in TBCategoriesComponent>>renderCategoryLinkOn:with:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[THERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBPostsListComponent>> #renderPostColumnOn:
14 May 2022 12:09:17.97649 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBPostsListComponent(Object)>>doesNotUnderstand: #renderPostColumnOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aMessage: 	renderPostColumnOn: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: TBPostsListComponent>> #renderPostColumnOn:
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


[ self renderCategoryColumnOn: html.
self renderPostColumnOn: html ] in [ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
		self renderPostColumnOn: html ] ] in TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


BlockClosure>>renderOn:
	Receiver: [ self renderCategoryColumnOn: html.
self renderPostColumnOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: ht...etc...
		startpc: 	102
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderCategoryColumnOn: html.
self renderPostColumnOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderCategoryColumnOn: html.
self renderPostColumnOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


[ self before.
canvas render: anObject.
self after ] in TBSLayoutRowTag(WATagBrush)>>with:
	Receiver: a TBSLayoutRowTag
	Arguments and temporary variables: 
		anObject: 	[ self renderCategoryColumnOn: html.
self renderPostColumnOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSLayoutRowTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


TBSLayoutRowTag(WABrush)>>with:
	Receiver: a TBSLayoutRowTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSLayoutRowTag(WATagBrush)>>with:
	Receiver: a TBSLayoutRowTag
	Arguments and temporary variables: 
		anObject: 	[ self renderCategoryColumnOn: html.
self renderPostColumnOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


[ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
		self renderPostColumnOn: html ] ] in TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


BlockClosure>>renderOn:
	Receiver: [ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
		self renderPostColu...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBPostsListComponent>>renderContentOn:
		startpc: 	92
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html tbsRow
	showGrid;
	with: [ self renderCategoryColumnOn: html.
		...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSLayoutRowTag


TBPostsListComponent>>renderContentOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBPostsListComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>accept:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBPostsListComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBPostsListComponent(WAPainter)>>renderWithContext:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'


TBPostsListComponent(WAPainter)>>renderOn:
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		header: 	a TBHeaderComponent
		postComponents: 	an OrderedCollection(a TBPostComponent a TBPostComponent a TBPo...etc...
		currentCategory: 	'Pharo'



--- The fulTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBHeaderComponent class>> #from:
14 May 2022 12:15:32.40249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBHeaderComponent class(Object)>>doesNotUnderstand: #from:
	Receiver: TBHeaderComponent
	Arguments and temporary variables: 
		aMessage: 	from: a TBPostsListComponent
		exception: 	MessageNotUnderstood: TBHeaderComponent class>> #from:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#component->TBHeaderComponent>>#component #compo...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBHeaderComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBPostsListComponent(TBScreenComponent)>>createHeaderComponent
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent(TBScreenComponent)>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent class(GRObject class)>>new
	Receiver: TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TBScreenComponent
		methodDict: 	a MethodDictionary(#basicRenderCategoriesOn:->TBPostsListComponent>...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBPostsListComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBApplicationRootComponent>>initialize
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		main: 	nil


TBApplicationRootComponent class(GRObject class)>>new
	Receiver: TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#children->TBApplicationRootComponent>>#children...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBApplicationRootComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	67
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'z19-xi7QN_mjoRJc'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'z19-xi7QN_mjoRJc'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBHeaderComponent class>> #from:
14 May 2022 12:17:32.13349 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBHeaderComponent class(Object)>>doesNotUnderstand: #from:
	Receiver: TBHeaderComponent
	Arguments and temporary variables: 
		aMessage: 	from: a TBPostsListComponent
		exception: 	MessageNotUnderstood: TBHeaderComponent class>> #from:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#component->TBHeaderComponent>>#component #compo...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBHeaderComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBPostsListComponent(TBScreenComponent)>>createHeaderComponent
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent(TBScreenComponent)>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent class(GRObject class)>>new
	Receiver: TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TBScreenComponent
		methodDict: 	a MethodDictionary(#basicRenderCategoriesOn:->TBPostsListComponent>...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBPostsListComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBApplicationRootComponent>>initialize
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		main: 	nil


TBApplicationRootComponent class(GRObject class)>>new
	Receiver: TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#children->TBApplicationRootComponent>>#children...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBApplicationRootComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	67
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'z19-xi7QN_mjoRJc'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'z19-xi7QN_mjoRJc'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start 
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields() a WARequestFields())


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'z19-xi7QN_mjoRJc'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex



--- The full stack ---
TBHeaderComponent class(Object)>>doesNotUnderstand: #from:
TBPostsListComponent(TBScreenComponent)>>createHeaderComponent
TBPostsListComponent(TBScreenComponent)>>initialize
TBPostsListComponent>>initialize
TBPostsListComponent class(GRObject class)>>new
TBApplicationRootComponent>>initialize
TBApplicationRootComponent class(GRObject class)>>new
[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
GRSmallDictionary2>>at:ifAbsent:
WARequestContext>>rootComponentIfAbsent:
WAInitialRenderLoopContinuation>>createRoot
WAInitialRenderLoopContinuation>>basicPerformAction
[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBHeaderComponent class>> #from:
14 May 2022 12:17:38.97249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBHeaderComponent class(Object)>>doesNotUnderstand: #from:
	Receiver: TBHeaderComponent
	Arguments and temporary variables: 
		aMessage: 	from: a TBPostsListComponent
		exception: 	MessageNotUnderstood: TBHeaderComponent class>> #from:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#component->TBHeaderComponent>>#component #compo...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBHeaderComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBPostsListComponent(TBScreenComponent)>>createHeaderComponent
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent(TBScreenComponent)>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent class(GRObject class)>>new
	Receiver: TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TBScreenComponent
		methodDict: 	a MethodDictionary(#basicRenderCategoriesOn:->TBPostsListComponent>...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBPostsListComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBApplicationRootComponent>>initialize
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		main: 	nil


TBApplicationRootComponent class(GRObject class)>>new
	Receiver: TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#children->TBApplicationRootComponent>>#children...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBApplicationRootComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	67
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'_zNHDBbU6_ZJ0h59'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'_zNHDBbU6_ZJ0h59'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start 
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields() a WARequestFields())


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'_zNHDBbU6_ZJ0h59'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex



--- The full stack ---
TBHeaderComponent class(Object)>>doesNotUnderstand: #from:
TBPostsListComponent(TBScreenComponent)>>createHeaderComponent
TBPostsListComponent(TBScreenComponent)>>initialize
TBPostsListComponent>>initialize
TBPostsListComponent class(GRObject class)>>new
TBApplicationRootComponent>>initialize
TBApplicationRootComponent class(GRObject class)>>new
[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
GRSmallDictionary2>>at:ifAbsent:
WARequestContext>>rootComponentIfAbsent:
WAInitialRenderLoopContinuation>>createRoot
WAInitialRenderLoopContinuation>>basicPerformAction
[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: procesTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBHeaderComponent class>> #from:
14 May 2022 12:18:11.82749 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBHeaderComponent class(Object)>>doesNotUnderstand: #from:
	Receiver: TBHeaderComponent
	Arguments and temporary variables: 
		aMessage: 	from: a TBPostsListComponent
		exception: 	MessageNotUnderstood: TBHeaderComponent class>> #from:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#component->TBHeaderComponent>>#component #compo...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBHeaderComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBPostsListComponent(TBScreenComponent)>>createHeaderComponent
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent(TBScreenComponent)>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent>>initialize
	Receiver: a TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		header: 	nil
		postComponents: 	nil
		currentCategory: 	nil


TBPostsListComponent class(GRObject class)>>new
	Receiver: TBPostsListComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TBScreenComponent
		methodDict: 	a MethodDictionary(#basicRenderCategoriesOn:->TBPostsListComponent>...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBPostsListComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBApplicationRootComponent>>initialize
	Receiver: a TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		main: 	nil


TBApplicationRootComponent class(GRObject class)>>new
	Receiver: TBApplicationRootComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#children->TBApplicationRootComponent>>#children...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#TBApplicationRootComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	97
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog'
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /TinyBlog version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	67
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'QVRkQqkgoLi7ltLY'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'QVRkQqkgoLi7ltLY'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start 
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields() a WARequestFields())


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'QVRkQqkgoLi7ltLY'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex



--- The full stack ---
TBHeaderComponent class(Object)>>doesNotUnderstand: #from:
TBPostsListComponent(TBScreenComponent)>>createHeaderComponent
TBPostsListComponent(TBScreenComponent)>>initialize
TBPostsListComponent>>initialize
TBPostsListComponent class(GRObject class)>>new
TBApplicationRootComponent>>initialize
TBApplicationRootComponent class(GRObject class)>>new
[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
GRSmallDictionary2>>at:ifAbsent:
WARequestContext>>rootComponentIfAbsent:
WAInitialRenderLoopContinuation>>createRoot
WAInitialRenderLoopContinuation>>basicPerformAction
[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuationTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
14 May 2022 12:19:26.87349 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
	Receiver: a TBAdminComponent
	Arguments and temporary variables: 
		aMessage: 	goToAdministrationView
		exception: 	MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAAnswerHandler
		header: 	a TBHeaderComponent


[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBAdminComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ component goToAdministrationView ]
	Arguments and temporary variables: 
		anArray: 	#('')
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	[ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goTo...etc...
		startpc: 	121
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	'
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(''
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUE...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		continationKey: 	'W2HUEoEaOduFLkGY'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'ash26xwyDR84tEwx'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in GRPharoPlatform>>openDebuggerOn
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in GRPharoPlatform>>openDebuggerOn:



--- The full stack ---
TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationVTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
14 May 2022 12:19:33.18649 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
	Receiver: a TBAdminComponent
	Arguments and temporary variables: 
		aMessage: 	goToAdministrationView
		exception: 	MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAAnswerHandler
		header: 	a TBHeaderComponent


[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBAdminComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ component goToAdministrationView ]
	Arguments and temporary variables: 
		anArray: 	#('')
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	[ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goTo...etc...
		startpc: 	121
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	'
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(''
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUE...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		continationKey: 	'W2HUEoEaOduFLkGY'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'ash26xwyDR84tEwx'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in GRPharoPlatform>>openDebuggerOn
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in GRPharoPlatform>>openDebuggerOn:



--- The full stack ---
TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
Array(SequenceableCollection)>>do:
WACallbackRegistry>>handle:
WACallbacTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
14 May 2022 12:19:34.09749 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
	Receiver: a TBAdminComponent
	Arguments and temporary variables: 
		aMessage: 	goToAdministrationView
		exception: 	MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAAnswerHandler
		header: 	a TBHeaderComponent


[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBAdminComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ component goToAdministrationView ]
	Arguments and temporary variables: 
		anArray: 	#('')
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	[ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goTo...etc...
		startpc: 	121
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	'
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(''
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUE...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		continationKey: 	'W2HUEoEaOduFLkGY'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'ash26xwyDR84tEwx'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in GRPharoPlatform>>openDebuggerOn
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in GRPharoPlatform>>openDebuggerOn:



--- The full stack ---
TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
Array(SequenceableCollection)>>do:
WACallbackRegistry>>handle:
WACallbackProcessingActionContinuation>>basicPerformAction
[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
BlockClosure>>ensure:
WACallbackProcessingActionContinuation>>performAction
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] inTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
14 May 2022 12:19:35.10249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
	Receiver: a TBAdminComponent
	Arguments and temporary variables: 
		aMessage: 	goToAdministrationView
		exception: 	MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAAnswerHandler
		header: 	a TBHeaderComponent


[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBAdminComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ component goToAdministrationView ]
	Arguments and temporary variables: 
		anArray: 	#('')
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	[ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goTo...etc...
		startpc: 	121
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	'
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(''
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUE...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		continationKey: 	'W2HUEoEaOduFLkGY'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'ash26xwyDR84tEwx'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in GRPharoPlatform>>openDebuggerOn
	Receiver's instance variables: 
		semaphore: 	a Semaphore()
		owner: 	a WAValueHolder contents: a Process in GRPharoPlatform>>openDebuggerOn:



--- The full stack ---
TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
Array(SequenceableCollection)>>do:
WACallbackRegistry>>handle:
WACallbackProcessingActionContinuation>>basicPerformAction
[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
BlockClosure>>ensure:
WACallbackProcessingActionContinuation>>performAction
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
14 May 2022 12:21:52.49249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBAdminComponent(Object)>>doesNotUnderstand: #goToAdministrationView
	Receiver: a TBAdminComponent
	Arguments and temporary variables: 
		aMessage: 	goToAdministrationView
		exception: 	MessageNotUnderstood: TBAdminComponent>> #goToAdministrationView
		resumeValue: 	ni
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAAnswerHandler
		header: 	a TBHeaderComponent


[ component goToAdministrationView ] in [ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goToAdministrationView ];
	with: [ html tbsGlyphIcon iconListAlt.
		html text: ' Admin View' ] ] in TBHeaderComponent>>renderSimpleAdminButtonOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBAdminComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ component goToAdministrationView ]
	Arguments and temporary variables: 
		anArray: 	#('')
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	[ html tbsNavbarButton
	tbsPullRight;
	callback: [ component goTo...etc...
		startpc: 	121
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	'
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(''
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ component goToAdministrationView ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback )
		nextKey: 	2


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUE...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOdu...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoEaOduFLkGY'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HUEoE...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=ash26xwyDR84tEwx&_k=W2HU...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	aTHERE_BE_DRAGONS_HERE
Break
14 May 2022 12:31:10.93749 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

[ html
	tbsModalDialog: [ html
			tbsModalContent: [ self renderHeaderOn: html.
				self renderBodyOn: html ] ] ] in TBAuthentificationComponent>>renderContentOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsModalDialog: [ html
			tbsModalContent: [ self renderHeaderOn: html.
				self r...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBAuthentificationComponent>>renderContentOn:
		startpc: 	116
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsModalDialog: [ html
			tbsModalContent: [ self renderHeade...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSModalTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsModalDialog: [ html
			tbsModalContent: [ self renderHeade...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSModalTag


[ self before.
canvas render: anObject.
self after ] in TBSModalTag(WATagBrush)>>with:
	Receiver: a TBSModalTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsModalDialog: [ html
			tbsModalContent: [ self renderHeade...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal' 'id'->'myAuthDialog')


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSModalTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSModalTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSModalTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a TBSModalTag


TBSModalTag(WABrush)>>with:
	Receiver: a TBSModalTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal' 'id'->'myAuthDialog')


TBSModalTag(WATagBrush)>>with:
	Receiver: a TBSModalTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsModalDialog: [ html
			tbsModalContent: [ self renderHeade...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal' 'id'->'myAuthDialog')


TBAuthentificationComponent>>renderContentOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBAuthentificationComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBAuthentificationComponent(WAComponent)>>accept:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBAuthentificationComponent(WAComponent)>>accept:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBAuthentificationComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBAuthentificationComponent(WAPainter)>>renderWithContext:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


TBAuthentificationComponent(WAPainter)>>renderOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	a TBAuthentificationComponen
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBHeaderComponent>>renderModalLoginButtonOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag



--- The full stack ---
[ html
	tbsModalDialog: [ html
			tbsModalContent: [ self renderHeaderOn: html.
				self renderBodyOn: html ] ] ] in TBAuthentificationComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSModalTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSModalTag(WABrush)>>with:
TBSModalTag(WATagBrush)>>with:
TBAuthentificationComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBAuthentificationComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBAuthentificationComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBAuthentificationComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBAuthentificationComponent(WAPainter)>>renderWithContext:
TBAuthentificationComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBHeaderComponent>>renderModalLoginButtonOn:
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value THERE_BE_DRAGONS_HERE
Break
14 May 2022 12:31:22.10649 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBAuthentificationComponent>>renderButtonsOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


[ self renderButtonsOn: html ] in [ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
html tbsModalFooter: [ self renderButtonsOn: html ] ] in [ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswordFieldOn: html.
		html tbsModalFooter: [ self renderButtonsOn: html ] ] ] in TBAuthentificationComponent>>renderBodyOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: ht...etc...
		startpc: 	99
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSFormTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal-footer')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSFormTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal-footer')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSFormTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal-footer')
		tag: 	'div'


WAHtmlCanvas>>tbsModalFooter:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
html tbsModalFooter: [ self renderButtonsOn: html ] ] in [ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswordFieldOn: html.
		html tbsModalFooter: [ self renderButtonsOn: html ] ] ] in TBAuthentificationComponent>>renderBodyOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
html tbsModalFooter: ...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self render...etc...
		startpc: 	85
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSFormTag(WATagBrush)>>with:
	Receiver: a TBSFormTag
	Arguments and temporary variables: 
		anObject: 	[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('accept-charset'->'utf-8' 'method'->'post' 'acti...etc...
		defaultAction: 	nil


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSFormTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


TBSFormTag(WABrush)>>with:
	Receiver: a TBSFormTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('accept-charset'->'utf-8' 'method'->'post' 'acti...etc...
		defaultAction: 	nil


TBSFormTag(WATagBrush)>>with:
	Receiver: a TBSFormTag
	Arguments and temporary variables: 
		anObject: 	[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('accept-charset'->'utf-8' 'method'->'post' 'acti...etc...
		defaultAction: 	nil


WAHtmlCanvas>>tbsForm:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
ht...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswordFieldOn: html.
		html tbsModalFooter: [ self renderButtonsOn: html ] ] ] in TBAuthentificationComponent>>renderBodyOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswordFieldOn: html.
		...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBAuthentificationComponent>>renderBodyOn:
		startpc: 	79
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPass...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPass...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPass...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal-body')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal-body')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPass...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'modal-body')
		tag: 	'div'


WAHtmlCanvas>>tbsModalBody:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswo...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a TBSButtonTag
		parentBrush: 	a WAGenericTag


TBAuthentificationComponent>>renderBodyOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent


renderContentOn: html
	html tbsModal
		id: 'myAuthDialog';
		with: [ html
				tbsModalDialog: [ html
						tbsModalContent: [ self renderHeaderOn: html.
							self renderBodyOn: html ] ] ] in [ html
	tbsModalContent: [ self renderHeaderOn: html.
		self renderBodyOn: html ] ] in self renderHeaderOn: html in TBAuthentificationComponent>>renderContentOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	nil
		password: 	nil
		account: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
TBAuthentificationComponent>>renderButtonsOn:
[ self renderButtonsOn: html ] in [ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
html tbsModalFooter: [ self renderButtonsOn: html ] ] in [ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswordFieldOn: html.
		html tbsModalFooter: [ self renderButtonsOn: html ] ] ] in TBAuthentificationComponent>>renderBodyOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsModalFooter:
[ self renderAccountFieldOn: html.
self renderPasswordFieldOn: html.
html tbsModalFooter: [ self renderButtonsOn: html ] ] in [ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswordFieldOn: html.
		html tbsModalFooter: [ self renderButtonsOn: html ] ] ] in TBAuthentificationComponent>>renderBodyOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSFormTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSFormTag(WABrush)>>with:
TBSFormTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsForm:
[ html
	tbsForm: [ self renderAccountFieldOn: html.
		self renderPasswordFieldOn: html.
		html tbsModalFooter: [ self renderButtonsOn: html ] ] ] in TBAuthentificationComponent>>renderBodyOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsModalBody:
TBAuthentificationComponent>>renderBodyOn:
renderContentOn: html
	html tbsModal
		id: 'myAuthDialog';
		with: [ html
				tbsModalDialog: [ html
						tbsModalContent: [ self renderHeaderOn: html.
							self renderBodyOn: html ] ] ] in [ html
	tbsModalContent: [ self renderHeaderOn: html.
		self renderBodyOn: html ] ] in self renderHeaderOn: html in TBAuthentificationComponent>>renderContentOn:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsModalContent:
[ html
	tbsModalContent: [ self renderHeaderOn: html.
		self renderBodyOn: html ] ] in self renderHeaderOn: html in TBAuthentificationComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsModalDialog:
self renderHeaderOn: html in TBAuthentificationComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSModalTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSModalTag(WABrush)>>with:
TBSModalTag(WATagBrush)>>with:
TBAuthentificationComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBAuthentificationComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitCompoTHERE_BE_DRAGONS_HERE
Break
14 May 2022 12:35:46.99249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBAuthentificationComponent>>password
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		password: 	'thebrightside'
		account: 	'luke'
		component: 	a TBPostsListComponent


TBAuthentificationComponent>>validate
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		password: 	'thebrightside'
		account: 	'luke'
		component: 	a TBPostsListComponent


[ self validate ] in TBAuthentificationComponent>>renderButtonsOn:
	Receiver: a TBAuthentificationComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	ni
	Receiver's instance variables: 
		decoration: 	nil
		password: 	'thebrightside'
		account: 	'luke'
		component: 	a TBPostsListComponent


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self validate ]
	Arguments and temporary variables: 
		anArray: 	#('')
		args: 	#(
	Receiver's instance variables: 
		outerContext: 	TBAuthentificationComponent>>renderButtonsOn:
		startpc: 	157
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	'
	Receiver's instance variables: 
		key: 	'3'
		block: 	[ self validate ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(''
	Receiver's instance variables: 
		key: 	'3'
		block: 	[ self validate ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc...
		set: 	a Set(a WAActionCallback a WAValueCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallbac
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAValueCallback '2'->a WAValueCallback '3'->a WA...etc...
		nextKey: 	7


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a WAValueCallback a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	
	Receiver's instance variables: 
an Array(a WAValueCallback a WAValueCallback a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc...
		set: 	a Set(a WAActionCallback a WAValueCallback a WAValueCallback)
		fields: 	a WAMergedRequestField
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAValueCallback '2'->a WAValueCallback '3'->a WA...etc...
		nextKey: 	7


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WADebugErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc..
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	54
		numArgs: 	0


WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WADebugErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction 
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	97
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WADebugErrorHandle
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	77
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrm...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrm...etc..
	Receiver's instance variables: 
		index: 	15


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	79
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrm...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrm...etc..
	Receiver's instance variables: 
		index: 	15


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrm...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrm...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrmkKhLC'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2f...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	74
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2fvLrmkKhLC'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext 
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: POST uri: /TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-cw2f...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url 
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WASessionContinuation)>>ha...etc...
		startpc: 	67
		numArgs: 	0


WACallbackProcessingActionContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext 
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc..
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc...
		continationKey: 	'9Y-cw2fvLrmkKhLC'
		continuation: 	a WACallbackProcessingActionContinuation
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'RydGSZX2_MBORIIc'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/TinyBlog?_s=RydGSZX2_MBORIIc&_k=9Y-c...etc..
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	81
		numArgs: 	0



--- The full stack ---
TBAuthentificationComponent>>password
TBAuthentificationComponent>>validate
[ self validate ] in TBAuthentificationComponent>>renderButtonsOn:
BlockClosure>>valueWithPossibleArguments:
WAActionCallback>>evaluateWithArgument:
WAActionCallback(WACallback)>>evaluateWithFieldValues:
[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
Array(SequenceableCollection)>>do:
WACallbackRegistry>>handle:
WACallbackProcessingActionContinuation>>basicPerformAction
[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
BlockClosure>>on:do:
WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
BlockClosure>>ensure:
WACallbackProcessingActionContinuation>>performAction
WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
[ super handle: aReTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:42:20.21949 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'3DAJZXZ1cKuH2MXT'


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAPainter)>>renderWithContext:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>valTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:42:39.39349 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'3DAJZXZ1cKuH2MXT'


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAPainter)>>renderWithContext:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WADispatcher(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:42:40.43049 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'3DAJZXZ1cKuH2MXT'


TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: aTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:42:41.14249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'3DAJZXZ1cKuH2MXT'


TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WADispatcher(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
14 May 2022 12:42:41.96249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
14 May 2022 12:42:42.56449 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WADispatcher(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:42:47.63149 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'tG__2XHqIDtq35KH'


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAPainter)>>renderWithContext:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcheTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:43:09.80949 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'4PplEIqSSwjGY9RU'


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAPainter)>>renderWithContext:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:43:26.00249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'aHqao2K9s9K16WUC'


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAPainter)>>renderWithContext:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:45:34.31949 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'aHqao2K9s9K16WUC'


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAPainter)>>renderWithContext:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>pusTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:45:37.06849 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'aHqao2K9s9K16WUC'


TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WADispatcher(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:45:38.37049 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'aHqao2K9s9K16WUC'


TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
14 May 2022 12:45:39.32149 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WADispatcher(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
14 May 2022 12:45:42.01349 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	MessageNotUnderstood: receiver of "ifTrue:ifFalse:" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifTrue: (arg1 tempNamed: 'html') ifFalse: ^ self session isLogged
	if...etc...
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

TBHeaderComponent>>DoItIn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		arg1: 	TBHeaderComponent>>renderButtonsOn
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	TBHeaderComponent>>renderButtonsOn:
		ret: 	nil
		cache: 	an IdentityDictionary(68->TBHeaderComponent>>#DoItIn: )
		method: 	TBHeaderComponent>>#DoItIn
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #ifTrue:ifFalse:
UndefinedObject>>doesNotUnderstand: #ifTrue:ifFalse:
TBHeaderComponent>>DoItIn:
UndefinedObject(ProtoObject)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(ProtoObject)>>mustBeBoolean
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAApplication(WARequestHandler)>>handle:
WADispatcher>>handleFiltered:named:
WADispatcher>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WADispatcher(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WADispatcher(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WASession>> #isLogged
14 May 2022 12:47:26.79849 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

WASession(Object)>>doesNotUnderstand: #isLogged
	Receiver: a WASession
	Arguments and temporary variables: 
		aMessage: 	isLogged
		exception: 	MessageNotUnderstood: WASession>> #isLogged
		resumeValue: 	ni
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2(#presenter->a TBApplicationRootComponent)
		documentHandlers: 	nil
		key: 	'Lcs4jt1q0jDMbcF4'


TBHeaderComponent>>renderButtonsOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ self renderBrandOn: html.
self renderButtonsOn: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderBu...etc...
		startpc: 	89
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a TBSNavbarTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container')
		tag: 	'div'


WAHtmlCanvas>>tbsContainer:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self renderBrandOn: html.
self renderButtonsOn: html 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


BlockClosure>>renderOn:
	Receiver: [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBHeaderComponent>>renderContentOn:
		startpc: 	83
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		outerContext: 	TBSNavbarTag(WATagBrush)>>with:
		startpc: 	98
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


TBSNavbarTag(WABrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after 
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBSNavbarTag(WATagBrush)>>with:
	Receiver: a TBSNavbarTag
	Arguments and temporary variables: 
		anObject: 	[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButton...etc..
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->a WAConcatenatedHtmlAttributeValue)


TBHeaderComponent>>renderContentOn:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		html: 	a WAHtmlCanva
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponent
		renderer: 	a WAHtmlCanva
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisito
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a TBHeaderComponen
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>accept:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAComponent)>>acceptDecorated:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuid
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a TBHeaderComponen
	Receiver's instance variables: 
		client: 	a WARenderVisitor


TBHeaderComponent(WAPainter)>>renderWithContext:
	Receiver: a TBHeaderComponent
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContex
	Receiver's instance variables: 
		decoration: 	nil
		component: 	a TBPostsListComponent



--- The full stack ---
WASession(Object)>>doesNotUnderstand: #isLogged
TBHeaderComponent>>renderButtonsOn:
[ self renderBrandOn: html.
self renderButtonsOn: html ] in [ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>tbsContainer:
[ html
	tbsContainer: [ self renderBrandOn: html.
		self renderButtonsOn: html ] ] in TBHeaderComponent>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in TBSNavbarTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
TBSNavbarTag(WABrush)>>with:
TBSNavbarTag(WATagBrush)>>with:
TBHeaderComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBHeaderComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBHeaderComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBHeaderComponent(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
TBHeaderComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBPostsListComponent(TBScreenComponent)>>renderContentOn:
TBPostsListComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBPostsListComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBPostsListComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBPostsListComponent(WAPainter)>>renderWithContext:
TBPostsListComponent(WAPainter)>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
TBApplicationRootComponent>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
TBApplicationRootComponent(WAComponent)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
TBApplicationRootComponent(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
TBApplicationRootComponent(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in [ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentExceptionHandler(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentExceptionHandler(DynamicVariable)>>value:during:
WACurrentExceptionHandler class(DynamicVariable class)>>value:during:
WACurrentExceptionHandler class(GRDynamicVariable class)>>use:during:
[ WACurrentExceptionHandler
	use: handler
	during: [ super handleFiltered: aRequestContext ] ] in WAExceptionFilter>>handleFiltered:
BlockClosure>>on:do:
WADebugErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
WAExceptionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAApplication(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContextTHERE_BE_DRAGONS_HERE
Instance of TBHeaderComponent class did not understand #session
14 May 2022 12:49:07.01249 pm

VM: Win32 - X64 - 6.2 - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Sep 13 2019
VM: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm Date: Wed Jul 3 16:41:39 2019 CommitHash: 4e4c5b5a0 Plugins: 201907031441-pharo Guille@DESKTOP-MG6660L:projects/vm7/opensmalltalk-vm

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.1136.sha.a153e04ae4e325509ed78bfe25c9ce560afb24b0 (64 Bit)]

TBHeaderComponent class(Object)>>doesNotUnderstand: #session
	Receiver: TBHeaderComponent
	Arguments and temporary variables: 
		aMessage: 	session
		exception: 	MessageNotUnderstood: TBHeaderComponent class>> #session
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#component->TBHeaderComponent>>#component #compo...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{TBAdminHeaderComponent}
		name: 	#TBHeaderComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


TBHeaderComponent class>>DoIt
	Receiver: TBHeaderComponent
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#component->TBHeaderComponent>>#component #compo...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{TBAdminHeaderComponent}
		name: 	#TBHeaderComponent
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'TinyBlog-Components'


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ self session isLogged
		source: 	a ReadStream
		context: 	nil
		receiver: 	TBHeaderComponent
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClyTextEditor(RubSmalltalkEditor)>>evaluate:andDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result asScriptResultStringInCalypso ]
	o...etc...
		result: 	nil
		rcvr: 	TBHeaderComponent
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(247916544)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


ClyTextEditor(RubSmalltalkEditor)>>evaluateSelectionAndDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result asScriptResultStringInCalypso ]
	o...etc..
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(247916544)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


ClyTextEditor>>printIt
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		printString: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(247916544)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


RubEditingArea(Object)>>perform:orSendTo:
	Receiver: a RubEditingArea(247916544)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a ClyTextEdito
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1340@107)
		owner: 	a TransformWithLayoutMorph(618035712)
		submorphs: 	an Array(a RubCursor(20670976) a RubPrimarySelectionMorph(476269568)...etc...
		fullBounds: 	(0@0) corner: (1340@107)
		color: 	Color transparent
		extension: 	a MorphExtension (601442304) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a RubScrolledTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a ClyTextEditor
		scrollPane: 	a RubTextScrollPane(1025043712)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a ClyTextEditingMode
		cursor: 	a RubCursor(20670976)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(247916544)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	ClyTextEditor


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ] ].
self showShortcut.
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(727019776)'Print it'
	Arguments and temporary variables: 
		evt: 	[(723@626) mouseUp 14699640 nil]
		w: 	a WorldMorph(1058399488) [world]
		selArgCount: 	
	Receiver's instance variables: 
		bounds: 	(641.0@616.0) corner: (829.0@633.0)
		owner: 	a MenuMorph(566395392)
		submorphs: 	#()
		fullBounds: 	(641.0@616.0) corner: (829.0@633.0)
		color: 	Color white
		extension: 	a MorphExtension (238767872)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(247916544)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	230
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc..
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(727019776)'Print it'
	Arguments and temporary variables: 
		evt: 	[(723@626) mouseUp 14699640 nil]
		w: 	a WorldMorph(1058399488) [world
	Receiver's instance variables: 
		bounds: 	(641.0@616.0) corner: (829.0@633.0)
		owner: 	a MenuMorph(566395392)
		submorphs: 	#()
		fullBounds: 	(641.0@616.0) corner: (829.0@633.0)
		color: 	Color white
		extension: 	a MorphExtension (238767872)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(247916544)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(727019776)'Print it'
	Arguments and temporary variables: 
		evt: 	[(723@626) mouseUp 14699640 nil
	Receiver's instance variables: 
		bounds: 	(641.0@616.0) corner: (829.0@633.0)
		owner: 	a MenuMorph(566395392)
		submorphs: 	#()
		fullBounds: 	(641.0@616.0) corner: (829.0@633.0)
		color: 	Color white
		extension: 	a MorphExtension (238767872)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(247916544)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(727019776)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil
	Receiver's instance variables: 
		bounds: 	(641.0@616.0) corner: (829.0@633.0)
		owner: 	a MenuMorph(566395392)
		submorphs: 	#()
		fullBounds: 	(641.0@616.0) corner: (829.0@633.0)
		color: 	Color white
		extension: 	a MorphExtension (238767872)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(247916544)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(723@626) mouseUp 14699640 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(727019776)'Print it
	Receiver's instance variables: 
		timeStamp: 	14699640
		source: 	a HandMorph(554752512)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(723@626)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(727019776)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil
	Receiver's instance variables: 
		bounds: 	(641.0@616.0) corner: (829.0@633.0)
		owner: 	a MenuMorph(566395392)
		submorphs: 	#()
		fullBounds: 	(641.0@616.0) corner: (829.0@633.0)
		color: 	Color white
		extension: 	a MorphExtension (238767872)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(247916544)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		aMorph: 	a ToggleMenuItemMorph(727019776)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	tru
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(723@626) mouseUp 14699640 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	14699640
		source: 	a HandMorph(554752512)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(723@626)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		aMorph: 	a ToggleMenuItemMorph(727019776)'Print it
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		aMorph: 	a ToggleMenuItemMorph(727019776)'Print it
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(727019776)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		defaultDispatcher: 	a MorphicEventDispatche
	Receiver's instance variables: 
		bounds: 	(641.0@616.0) corner: (829.0@633.0)
		owner: 	a MenuMorph(566395392)
		submorphs: 	#()
		fullBounds: 	(641.0@616.0) corner: (829.0@633.0)
		color: 	Color white
		extension: 	a MorphExtension (238767872)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(247916544)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a ClyTextEditor)
		icon: 	Form(13x13x32)
		keyText: 	'p'
		getStateSelector: 	nil
		enablementSelector: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		aMorph: 	a MenuMorph(566395392)
		localEvt: 	[(723@626) mouseUp 14699640 nil]
		index: 	4
		child: 	a ToggleMenuItemMorph(727019776)'Print it'
		morphs: 	an Array(a ToggleMenuItemMorph(866141440)'Source code' a MenuLineMorph(...etc...
		inside: 	fals
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(723@626) mouseUp 14699640 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	14699640
		source: 	a HandMorph(554752512)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(723@626)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		aMorph: 	a MenuMorph(566395392
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		aMorph: 	a MenuMorph(566395392
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(727019776)'Print it'


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(566395392)
	Arguments and temporary variables: 
		anEvent: 	[(723@626) mouseUp 14699640 nil]
		defaultDispatcher: 	a MorphicEventDispatche
	Receiver's instance variables: 
		bounds: 	(637.0@573.0) corner: (833.0@928.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(866141440)'Source code' a MenuLineMor...etc...
		fullBounds: 	(637.0@573.0) corner: (833.0@928.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (426576384) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(727019776)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(566395392)
	Arguments and temporary variables: 
